{"version":3,"sources":["../../contracts/src/addresses.js","../../contracts/src/index.js","components/SharedStyling.js","connectors.ts","hooks.ts","helpers/EPNSCoreHelper.js","segments/Airdrop.tsx","singletons/YieldFarmingDataStore.js","components/InfoTooltip.js","components/BlockiesIdenticon.js","components/PoolCard.js","segments/YieldFarming.js","helpers/NFTHelper.js","components/DisplayNotice.js","assets/Device.js","components/ViewNFTItem.js","components/MyNFTs.js","components/AllNFTs.js","components/TransferNFT.js","segments/NFT.js","components/ViewDelegateeItem.js","segments/PushGovernance.tsx","singletons/ChannelsDataStore.js","singletons/UsersDataStore.js","pages/Home.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js","helpers/AirdropHelper.js","components/blockies.js"],"names":["addresses","ceaErc20","epnscore","dai","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","uniswapV2Router02","WETHAddress","USDTAddress","rockstar","batchMintNFT","NFTRewards","distributor","abis","erc20","erc20Abi","ownable","ownableAbi","epnscoreAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","UniswapV2Router02Abi","Section","styled","section","props","align","direction","theme","gradient","margin","padding","overflow","Content","div","ItemBreak","Item","wrap","position","bg","flex","self","justify","minWidth","maxWidth","size","textAlign","filter","right","left","bottom","top","width","height","border","radius","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","transform","arcRGB","css","h1","h2","color","weight","textTransform","spacing","family","H3","h3","Image","img","P","p","Span","span","pos","z","B","UL","ul","LI","li","Anchor","a","hoverBG","A","Button","button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","Input","input","display","outline","cursor","hand","textarea","require","config","RPC_URLS","1","process","REACT_APP_RPC_URL_1","3","REACT_APP_RPC_URL_3","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","console","log","trezor","TrezorConnector","manifestEmail","manifestAppUrl","portis","PortisConnector","dAppId","networks","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","then","response","catch","err","getVotingPower","delegateeAddress","rawFormat","ethers","utils","isAddress","endsWith","decimals","getCurrentVotes","votes","Number","Math","pow","votingPower","prettyVotingPower","toString","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","mapAddressChannels","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","i","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","length","getSubscribedStatus","memberExists","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","metricFormatter","e","num","digits","si","value","symbol","toFixed","replace","dotenv","Question","Answer","ONE_PUSH","BigNumber","from","mul","tokenToBn","token","tokenBNtoNumber","tokenBn","YieldFarmingDataStore","state","account","signer","yieldFarmingPUSH","yieldFarmingLP","rewardForCurrentEpochPush","rewardForCurrentEpochLP","genesisEpochAmountPUSH","deprecationPerEpochPUSH","genesisEpochAmountLP","deprecationPerEpochLP","init","getPoolStats","getCurrentEpoch","currentEpochPUSH","getAmountsOut","pushPriceAmounts","pushPrice","balanceOf","pushAmountReserve","attach","wethAmountReserve","ethPriceAmounts","ethPrice","totalSupply","uniTotalSupply","lpToPushRatio","uniLpPrice","getPoolSize","add","pushNextPoolSize","lpNextPoolSize","totalValueLocked","epochDuration","epochStart","start","sub","epochEndTimestamp","TOTAL_DISTRIBUTED_AMOUNT","pushTotalDistributedAmount","lpTotalDistributedAmount","totalDistributedAmount","getPushRewardsDistributed","pushRewardsDistributed","currentEpoch","getPUSHPoolStats","NR_OF_EPOCHS","totalEpochPUSH","genesisEpochAmount","deprecationPerEpoch","rewardForCurrentEpoch","calcTotalAmountPerEpoch","poolBalance","stakingAPR","calcStakingAPR","getLPPoolStats","poolStats","calcLPPoolAPR","getUserData","calculateUserEpochReward","potentialUserReward","getEpochStake","epochStakeNext","totalAccumulatedReward","epochReward","lastEpochIdHarvested","totalAvailableReward","currentEpochLP","pushPoolRewardsDistributed","lpPoolRewardsDistributed","rewardForCurrentEpochPUSH","epochId","calcAnnualEpochReward","currentEpochReward","depreciate","weeks","totalStaked","apr","parseInt","annualRewards","aprFormatted","epochStake","poolSize","instance","InfoTooltip","title","Tooltip","style","marginLeft","BlockiesIdenticon","seed","this","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","render","canvas","React","createElement","ref","Component","bn","number","defaultValue","bnToInt","bnAmount","PoolCard","poolName","poolAddress","tokenAddress","pushPoolStats","userData","useWeb3React","active","error","library","useState","depositAmountToken","setDepositAmountToken","txInProgress","showDepositItem","setShowDepositItem","depositApproved","setDepositApprove","txInProgressApprDep","setTxInProgressApprDep","txInProgressDep","setTxInProgressDep","showDepSlip","setShowDepSlip","txInProgressWithdraw","setTxInProgressWithdraw","txInProgressMassHarvest","setTxInProgressMassHarvest","useEffect","checkApprDeposit","getSigner","tokenAddr","Contract","allowance","gte","fillMax","balance","approveDeposit","uintMax","approve","tx","txToast","toast","dark","msg","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","waitForTransaction","hash","update","type","TYPE","SUCCESS","name","ERROR","depositAmountTokenFarmSingleTx","deposit","withdrawAmountTokenFarmAutomatic","withdrawAmount","formatTokens","withdraw","massHarvestTokensAll","massHarvest","tokens","numberWithCommas","x","items","PoolContainer","borderBottom","PoolBoxTitle","fg","PoolBoxMsg","EpochDisplayer","MaxButton","onClick","placeholder","onChange","target","ButtonAlt","disabled","LoaderToast","h5","Toaster","ToasterMsg","StatsCard","StatsHeading","StatsContent","StatsPreview","StatsInnerTitle","StatsInnerSub","YieldFarming","setPoolStats","setPushPoolStats","lpPoolStats","setLpPoolStats","userDataPUSH","setUserDataPUSH","userDataLP","setUserDataLP","formattedDuration","setFormattedDuration","setEpnsToken","setStaking","setYieldFarmingPUSH","setYieldFarmingLP","setUniswapV2Router02","useCallback","getUserDataPUSH","getUserDataLP","setTimeout","duration","floor","Date","day","hour","minutes","seconds","getFormattedDuration","uniswapV2Router02Instance","syncData","href","NFTHelper","getNFTBalance","getTotalSupply","getOwnerOfTokenId","tokenId","ownerOf","getTokenOfOwnerByIndex","index","tokenOfOwnerByIndex","getTokenByIndex","tokenByIndex","getTokenMetadata","tokenURI","getTokenMetadatasOfOwner","owner","nftContract","rewardsContract","NFTDetails","getClaimable","claimable","metadata","id","getAllTokenDatas","getTokenData","transferNFT","to","safeTransferFrom","getClaimRewardStatus","Container","Notice","DisplayNotice","animationIn","animationOut","durationOut","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","NFTTextStyle","label","NFTStatus","NFTStatusTitle","NFTClaim","NFTClaimTitle","ChannelLogo","atW","atH","borderRadius","marginBottom","marginRight","ChannelLogoOuter","ChannelLogoInner","ChannelMetaBox","ChannelActions","ChannelActionButton","ActionTitle","hideit","ActionLoader","SkeletonButton","UnsubscribeButton","ViewNFTItem","NFTObject","setControlAt","nftReadProvider","nftWriteProvider","controlAt","setTokenId","NFTRewardsContract","setNFTRewardsContract","loading","setLoading","setTxInProgress","NFTRewardsInstance","handleClaim","claimReward","sendWithTxPromise","key","controls","playing","loop","ContainerInfo","Items","MyNFTs","setNftReadProvider","setNftWriteProvider","NFTObjects","setNFTObjects","contractInstance","signerInstance","fetchNFTDetails","prev","Object","keys","transitions","scaleDown","AllNFTs","activeBG","TransferNFT","toAddress","setToAddress","processing","setProcessing","processingInfo","setProcessingInfo","handleTransferNFT","preventDefault","isEmpty","txPromise","field","trim","onSubmit","required","maxlength","QnAItem","AMod","NFT","epnsReadProvider","epnsWriteProvide","showAnswers","setShowAnswers","toggleShowAnswer","newShowAnswers","userClickedAt","controlIndex","DelegateeItem","DelegateeImageOuter","DelegateeImageInner","DelegateeProfile","DelegateeWallet","ViewDelegateeItem","delegateeObject","pushBalance","isBalance","setIsBalance","delegateAction","delegate","wallet","pic","src","srcSet","alt","toLowerCase","toLocaleString","forum","delegateesJSON","op","NomineeContainer","AbsoluteWrapper","CurvedSpan","Blocky","BlockyInner","Wallet","Delegate","setAddress","ens","setENS","ensFetched","setENSFetched","dashboardLoading","setDashboardLoading","delegateesLoading","setDelegateesLoading","setDelegateesObject","pushDelegatees","setPushDelegatees","pushNominees","setPushNominees","tokenBalance","setTokenBalance","prettyTokenBalance","setPrettyTokenBalance","showDelegateePrompt","setShowDelegateePrompt","delegatee","setDelegatee","selfVotingPower","setSelfVotingPower","newDelegateeAddress","setNewDelegateeAddress","newDelegateeVotingPower","setNewDelegateeVotingPower","lookupAddress","epnsTokenContract","getMyInfo","delegateesList","values","votingPowerSorter","b","allDelegateesPromise","oneDelegate","allDelegatees","delegateesAbove75k","votingPowerSimulate","sortedDelegatees","sort","delegateesBelow75k","sortedNominees","isValidAddress","bal","newBal","delegates","newDelegatee","substring","onePushNominee","oneDelegatee","ChannelEvents","ChannelsDataStore","channelsMeta","channelsJson","callbacks","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","entries","callback","Subscribe","count","memberCount","bigNumberify","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelsMetaAsync","channelsDummy","getChannelMetaAsync","channelAddress","getChannelMetaViaAddressAsync","getChannelJsonAsync","UserEvents","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","PublicKeyRegistered","once","incrementUsersCountAsync","Controls","ControlButton","ControlImage","ControlText","Interface","Home","setBadgeCount","bellPressed","ReactGA","pageview","epnsWriteProvider","window","open","PushGovernance","Profile","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","className","HeaderContainer","Logo","PrimaryTheme","ThirdTheme","Connection","phase","Header","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","obj","logo","WalletConnect","Trezor","Ledger","Portis","getLibrary","provider","connector","providers","Web3Provider","App","activate","setBellPressed","initialize","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","ParentContainer","HomeContainer","ProviderLogo","currentConnector","image","ProviderButton","ProviderImage","newestOnTop","rtl","pauseOnFocusLoss","header","ToastContainer","attrs","Boolean","location","hostname","match","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","claims","AirdropHelper","combinedHash","first","second","Buffer","solidityKeccak256","compare","slice","toNode","amount","pairHex","verifyProof","proof","root","pair","equals","getNextLayer","elements","reduce","layer","el","idx","arr","getRoot","balances","nodes","layers","verifyAddress","merkleRootHex","merkleRoot","claim","verified","isClaimed","BNamount","randseed","Array","rand","t","createColor","buildOpts","newOpts","random","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","data","y","row","r","reverse","concat","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","module","exports"],"mappings":"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","file":"static/js/main.1283aea4.chunk.js","sourcesContent":["// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0xc882dA9660d29c084345083922F8a9292E58787D\",\n  dai: \"0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108\",\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n\n  staking: \"0xB72ff1e675117beDefF05a7D0a472c3844cfec85\",\n  yieldFarmPUSH: \"0x6019B84E2eE9EB62BC42E32AB6375A7095886366\",\n  yieldFarmLP: \"0xbB2A70e67770D0A7F5f42d883C5BBE9b85e0DcD6\",\n  epnsToken: \"0xf418588522d5dd018b425E472991E52EBBeEEEEE\",\n  epnsLPToken: \"0xaf31fd9c3b0350424bf96e551d2d1264d8466205\",\n\n  uniswapV2Router02: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\n\n  // WETHAddress: \"0xc778417e063141139fce010982780140aa0cd5ab\", // ropsten address\n  // USDTAddress: \"0xad6d458402f60fd3bd25163575031acdce07538d\", // ropsten address\n\n  WETHAddress: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\", // mainnet address\n  USDTAddress: \"0xdac17f958d2ee523a2206206994597c13d831ec7\", // mainnet address\n\n  rockstar: \"0x3f8C2152b79276b78315CAF66cCF951780580A8a\", //mainnet address\n  batchMintNFT: \"0x6BaeeD93336B277D8949Cb89161269032698f443\", //mainnet address\n  NFTRewards: \"0xc4708BB6EC3B797344f123126171302e4e3E68E2\", //mainnet address\n  distributor: \"0x64CfAb2eA55ADAe08c9040fdA247828444fB9D0D\", //mainnet address\n};\n\n\nexport default addresses;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\nimport daiAbi from \"./abis/dai\";\nimport epnsTokenAbi from \"./abis/EPNS.json\";\nimport stakingAbi from \"./abis/Staking.json\";\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\nimport rockstarAbi from \"./abis/Rockstar.json\";\nimport ec721Abi from \"./abis/ERC721.json\";\nimport NFTRewards from \"./abis/NFTRewards.json\";\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\nimport UniswapV2Router02Abi from \"./abis/UniswapV2Router02.json\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n  dai: daiAbi,\n  epnsToken: epnsTokenAbi,\n  staking: stakingAbi,\n  yieldFarming: yieldFarmingAbi,\n  rockstar: rockstarAbi,\n  erc721: ec721Abi,\n  NFTRewards: NFTRewards,\n  distributor: MerkleDistributorAbi,\n  uniswapV2Router02: UniswapV2Router02Abi,\n};\n\nexport { default as addresses } from \"./addresses\";\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"40px 0px\"};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: ${props => props.position || 'relative'};\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"initial\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  width: ${props => props.width || \"initial\" };\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"initial\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  text-transform: ${props => props.textTransform || \"initial\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\n\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  1: process.env.REACT_APP_RPC_URL_1 as string,\n  3: process.env.REACT_APP_RPC_URL_3 as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1] })\n\n// export const network = new NetworkConnector({\n//   urls: { 3: RPC_URLS[3] },\n//   defaultChainId: 3,\n//   pollingInterval: POLLING_INTERVAL\n// })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: RPC_URLS[1] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\nexport const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n\nconsole.log(RPC_URLS[1]);\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'support@epns.io',\n  manifestAppUrl: 'https://incentives.epns.io'\n})\n\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [1, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\nimport { parseEther, bigNumber } from 'ethers/utils'\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  getVotingPower : async (delegateeAddress, contract, rawFormat = false) => {\n    let isAddress = await ethers.utils.isAddress(delegateeAddress)\n    if(isAddress || delegateeAddress.endsWith('.eth')){\n      try{\n        let decimals =  await contract.decimals()\n        let votes = await contract.getCurrentVotes(delegateeAddress)\n        let votingPower = await Number(votes/Math.pow(10, decimals))\n        let prettyVotingPower = votingPower.toString();\n        return rawFormat ? votingPower : prettyVotingPower;\n      }\n      catch(err){\n      console.log(\"🚀 ~ file: ViewDelegateeItem.js ~ line 47 ~ getVotingPower ~ err\", err)\n      }\n    }\n    return \"0.000\"\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.mapAddressChannels(channelID)\n        .then(response => {\n          console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      const ids = identity.split(\"+\"); // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getUserInfo(user, contract)\n        .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.memberExists(user, channel)\n        .then(response => {\n          console.log(\"getSubscribedStatus() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, Para, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { AiFillHeart } from 'react-icons/ai';\nimport { BsChevronExpand } from 'react-icons/bs';\n\nimport Loader from 'react-loader-spinner'\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n\nimport AirdropHelper from 'helpers/AirdropHelper';\n\nimport ViewInfoItem from \"components/ViewInfoItem\";\n\nimport * as dotenv from \"dotenv\";\nimport UsersDataStore from \"singletons/UsersDataStore\";\ndotenv.config();\n\n// Other Information section\nfunction Airdrop() {\n  const { account, library } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\n  const [distributorContract, setDistributorContract] = React.useState(null);\n  const [user, setUser] = React.useState(null);\n\n  const [showAnswers, setShowAnswers] = React.useState([]);\n\n  const toggleShowAnswer = (id) => {\n    let newShowAnswers = [...showAnswers];\n    newShowAnswers[id] = !newShowAnswers[id];\n\n    setShowAnswers(newShowAnswers);\n  }\n\n  React.useEffect(() => {\n    if (!!(library && account)) {\n      let signer = library.getSigner(account);\n      const signerInstance = new ethers.Contract(addresses.distributor, abis.distributor, signer);\n      setDistributorContract(signerInstance);\n      // const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\n      // setNFTRewardsContract(NFTRewardsInstance);\n    }\n  }, [account,library]);\n\n  React.useEffect(() => {\n    if(distributorContract){\n      checkClaim();\n    }\n  }, [account, distributorContract]);\n\n  // to check wh\n  const checkClaim = async () => {\n    let user = await AirdropHelper.verifyAddress(account, distributorContract);\n    setUser(user)\n    if(user)\n    setLoading(false)\n  }\n\n  // to claim\n  const handleClaim = async (user) => {\n    if(distributorContract){\n      setTxInProgress(true)\n      let sendWithTxPromise\n      sendWithTxPromise = await distributorContract.claim(user.index, user.account, user.amount, user.proof)\n      const tx = await sendWithTxPromise;\n      console.log(tx);\n      console.log(\"waiting for tx to finish\");\n      let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n        position: \"bottom-right\",\n        autoClose: false,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      try {\n        await library.waitForTransaction(tx.hash);\n\n        toast.update(txToast, {\n          render: \"Transaction Completed!\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000\n        });\n\n        setTxInProgress(false);\n      }\n      catch(e) {\n        toast.update(txToast, {\n          render: \"Transaction Failed! (\" + e.name + \")\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n\n        setTxInProgress(false);\n      }\n      setLoading(false);\n    }\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  return (\n    <>\n      <Section margin=\"20px\">\n        <Content padding=\"0px 20px 0px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Gratitude</Span><Span weight=\"200\"> Drop!</Span>\n            </H2>\n            <H3>We would never be here without you! Thanks for the <b>#PUSH</b>!!!</H3>\n          </Item>\n        </Content>\n\n        <Content padding=\"0px 20px 0px 20px\">\n          <Item align=\"flex-start\">\n            <Para margin=\"10px 0px 0px 0px\">Thanks for the ton of support, feedback, encouragement and helping us out in every step! As a small token of our gratitude, we are dropping <B>1200 $PUSH</B> to anyone who:</Para>\n\n            <Para margin=\"20px 0px 0px 20px\">- Donated to us on <B>Gitcoin grants round 6 or 7</B></Para>\n            <Para margin=\"10px 0px 0px 20px\">- Used our dApp on or before <B>20th March, 2021</B>: <AMod href=\"https://app.epns.io\" target=\"_blank\" title=\"Visit our dApp\">EPNS dApp</AMod></Para>\n          </Item>\n\n          <Item padding=\"40px 0px 20px 0px\">\n            {loading &&\n              <Loader\n               type=\"Oval\"\n               color=\"#35c5f3\"\n               height={40}\n               width={40}\n              />\n            }\n\n            {!loading && controlAt == 0 &&\n              <>\n              {user.verified && user.claimable &&\n                <EpicButton\n                  onClick={() => {handleClaim(user)}}\n                >\n                  Claim $PUSH Tokens\n                </EpicButton>\n              }\n              {user.verified && !user.claimable &&\n\n                <EpicButton\n                  theme=\"claimed\"\n                  disabled={true}\n                >\n                  $PUSH Tokens Claimed\n                </EpicButton>\n              }\n              {!user.verified &&\n                  <EpicButton\n                    theme=\"noteligible\"\n                    disabled={true}\n                  >\n                    Not eligible for Gratitude Drop\n                  </EpicButton>\n              }\n              </>\n            }\n          </Item>\n\n        </Content>\n      </Section>\n\n      {/* FAQs */}\n      <Section theme=\"#fcfcfc\" padding=\"0px 0px 0px 0px\">\n        <Content className=\"contentBox\">\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"-10px 20px 0px 20px\">\n\n            {/* Question */}\n            <Item align=\"stretch\" margin=\"0px 0px 0px 0px\">\n              <QnAItem>\n                <Question\n                  onClick={() => {toggleShowAnswer(1)}}\n                  hover=\"#e20880\"\n                >\n                  <Span>\n                    What is $PUSH contract address?\n                  </Span>\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\n                </Question>\n\n                {showAnswers[1] &&\n                  <Answer>\n                    <Span>$PUSH token contract address is <B>0xf418588522d5dd018b425E472991E52EBBeEEEEE</B></Span>\n                  </Answer>\n                }\n              </QnAItem>\n\n              <QnAItem>\n                <Question\n                  onClick={() => {toggleShowAnswer(2)}}\n                  hover=\"#e20880\"\n                >\n                  <Span>\n                    What is EPNS?\n                  </Span>\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\n                </Question>\n\n                {showAnswers[2] &&\n                  <Answer>\n                    <Span>Ethereum Push Notification Service (EPNS) is a decentralized protocol allowing Ethereum users to receive notifications for on-chain or off-chain activity.</Span>\n\n                    <Span>EPNS allows Web3 actors (users, dapps, service providers) to create notifications that are triggered if and when a smart contract reaches certain conditions. Other Web3 participants can search, browse, and subscribe to specific notifications and more confidently interact with dapps.</Span>\n                  </Answer>\n                }\n              </QnAItem>\n\n              <QnAItem>\n                <Question\n                  onClick={() => {toggleShowAnswer(3)}}\n                  hover=\"#e20880\"\n                >\n                  <Span>\n                    Why are push notifications important for Web3?\n                  </Span>\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\n                </Question>\n\n                {showAnswers[3] &&\n                  <Answer>\n                    <Span>Push notifications have transformed the Web2 ecosystem. They have enabled applications to have more direct relationships with users and have yielded fundamental strategies about marketing, product fit, user behavior, and more. </Span>\n\n                    <Span>The problem with Web2 notifications, however, is that they are entirely created and prescribed by the applications themselves, and are not always net-useful to the end user. Users rarely have a choice about what kinds of notifications they wish to receive, and more often than not, notifications are purely marketing vehicles to drive revenue for the applications.</Span>\n\n                    <Span><i><B>Decentralized notifications</B></i>, on the other hand, provide the emerging Web3 ecosystem with the benefits of a robust notification ecosystem without the exploitative or centralized drawbacks of Web2 notifications.</Span>\n\n                    <Span>Applications need ways to communicate with users in more immediate and event-initiated ways than through Twitter, Discord, or email. Users deserve to control what notifications they receive, and should benefit from the open source nature of Web3 by requesting notifications about protocol behavior.</Span>\n                  </Answer>\n                }\n              </QnAItem>\n\n              <QnAItem>\n                <Question\n                  onClick={() => {toggleShowAnswer(4)}}\n                  hover=\"#e20880\"\n                >\n                  <Span>\n                    How can I keep up with EPNS?\n                  </Span>\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\n                </Question>\n\n                {showAnswers[4] &&\n                  <Answer>\n                    <Span>Join our <AMod href=\"https://t.me/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">Telegram</AMod>, follow us on <AMod href=\"https://twitter.com/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">Twitter</AMod>, and sign up for our 5 minute <AMod href=\"https://epns.substack.com/\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">weekly product updates</AMod>.</Span>\n                  </Answer>\n                }\n              </QnAItem>\n\n\n            </Item>\n          </Item>\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\nconst InfoBox = styled.div`\n  padding: 10px 20px;\n  display: block;\n  align-self: stretch;\n  background: #fafafa;\n`\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${props => props.theme || '#674c9f'};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLinkText = styled.div`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n`\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\nconst Question = styled(Button)`\n  align-items: stretch;\n  align-self: stretch;\n`\n\nconst Answer = styled(Item)`\n  align-items: stretch;\n  align-self: stretch;\n\n`\n\nconst QnAItem = styled(Item)`\n  align-items: stretch;\n  align-self: stretch;\n  flex: auto;\n  margin: 15px 0px;\n  border: 1px solid #fafafa;\n  border-radius: 10px;\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\n  overflow: hidden;\n\n  & ${Question} {\n    background: transparent;\n    justify-content: flex-start;\n    text-transform: uppercase;\n\n    & ${Span} {\n      font-weight: 400;\n      letter-spacing: 0.2em;\n      margin-left: 10px;\n      flex: 1;\n    }\n\n    &:hover {\n      & ${Span} {\n        color: #fff;\n      }\n    }\n  }\n\n  & ${Answer} {\n    border: 1px solid #e6e6e6;\n    border-top: 1px solid #e6e6e6;\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n    padding: 10px 15px;\n    align-items: flex-start;\n    background: #fff;\n\n    & ${Span} {\n      line-height: 1.5em;\n      margin: 10px;\n      color: #000 ;\n      font-size: 1.05em;\n    }\n  }\n`\n\nconst AMod = styled(A)`\n  color: #e20880;\n  font-weight: 500;\n`\n\nconst EpicButton = styled(A)`\n  padding: 15px 15px;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 8px;\n  background: linear-gradient(273deg, #674c9f 0%, rgba(226,8,128,1) 100%);\n`\n\n// Export Default\nexport default Airdrop;\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { ethers } from \"ethers\";\nimport { bigNumber } from \"ethers/utils\";\n\nimport { addresses, abis } from \"@project/contracts\";\n\nconst ONE_PUSH = ethers.BigNumber.from(1).mul(\n  ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n);\nconst GENESIS_EPOCH_AMOUNT_PUSH = 30000\nconst GENESIS_EPOCH_AMOUNT_LP = 35000\n\nconst bn = function(number, defaultValue = null) { if (number == null) { if (defaultValue == null) { return null } number = defaultValue } return ethers.BigNumber.from(number) }\n\nconst tokenToBn = (token) => {\n  return token.mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18)))\n}\n\nconst tokenBNtoNumber = (tokenBn) => {\n  return tokenBn.div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(10))).toNumber() / 100000000\n}\n\nconst bnToInt = function (bnAmount) { return parseInt(bnAmount.div(bn(10).pow(18))) }\n\nexport default class YieldFarmingDataStore {\n  static instance =\n    YieldFarmingDataStore.instance || new YieldFarmingDataStore();\n\n  state = {\n    account: null,\n    signer: null,\n    staking: null,\n    yieldFarmingPUSH: null,\n    yieldFarmingLP: null,\n    rewardForCurrentEpochPush: null,\n    rewardForCurrentEpochLP: null,\n\n    genesisEpochAmountPUSH: GENESIS_EPOCH_AMOUNT_PUSH,\n    deprecationPerEpochPUSH: 100,\n    genesisEpochAmountLP: GENESIS_EPOCH_AMOUNT_LP,\n    deprecationPerEpochLP: 100,\n  };\n\n  // init\n  init = (account, epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02) => {\n    // set account\n    this.state.account = account;\n    this.state.epnsToken = epnsToken;\n    this.state.staking = staking;\n    this.state.yieldFarmingPUSH = yieldFarmingPUSH;\n    this.state.yieldFarmingLP = yieldFarmingLP;\n    this.state.uniswapV2Router02 = uniswapV2Router02;\n  };\n\n  // 1. Listen for Subscribe Async\n  getPoolStats = () => {\n    return new Promise(async (resolve, reject) => {\n      const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\n      const yieldFarmingLP = this.state.yieldFarmingLP;\n\n      const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\n\n      const pushPriceAmounts = await this.state.uniswapV2Router02.getAmountsOut(ONE_PUSH.toString(), [addresses.epnsToken, addresses.WETHAddress, addresses.USDTAddress]);\n      const pushPrice = pushPriceAmounts[pushPriceAmounts.length -1].toNumber()/1000000;\n\n      const pushAmountReserve = tokenBNtoNumber(await this.state.epnsToken.balanceOf(addresses.epnsLPToken))\n      const wethAmountReserve = tokenBNtoNumber(await this.state.epnsToken.attach(addresses.WETHAddress).balanceOf(addresses.epnsLPToken)) // Using epnsToken instance for WETH instance\n\n      const ethPriceAmounts = await this.state.uniswapV2Router02.getAmountsOut(ONE_PUSH.toString(), [addresses.WETHAddress, addresses.USDTAddress]);\n      const ethPrice = ethPriceAmounts[ethPriceAmounts.length -1].toNumber()/1000000;\n\n      const uniTotalSupply = tokenBNtoNumber(await this.state.epnsToken.attach(addresses.epnsLPToken).totalSupply()) // Using epnsToken instance for Uni-V2 instance\n\n      const uniLpPrice = ((pushAmountReserve * pushPrice) + (wethAmountReserve * ethPrice)) / uniTotalSupply\n      const lpToPushRatio = uniLpPrice / pushPrice\n\n      const pushNextPoolSize = tokenBNtoNumber(await yieldFarmingPUSH.getPoolSize(currentEpochPUSH.add(1)));\n      const lpNextPoolSize = tokenBNtoNumber(await yieldFarmingLP.getPoolSize(currentEpochPUSH.add(1)));\n\n      const totalValueLocked = (pushNextPoolSize * pushPrice) + (lpNextPoolSize * uniLpPrice)\n\n      const epochDuration = await yieldFarmingPUSH.epochDuration();\n\n      const epochStart = await yieldFarmingPUSH.epochStart();\n\n      const start = epochStart.add(currentEpochPUSH.sub(1).mul(epochDuration));\n      const epochEndTimestamp = start.add(epochDuration);\n\n      const pushTotalDistributedAmount = await yieldFarmingPUSH.TOTAL_DISTRIBUTED_AMOUNT();\n      const lpTotalDistributedAmount = await yieldFarmingLP.TOTAL_DISTRIBUTED_AMOUNT();\n\n      const totalDistributedAmount = pushTotalDistributedAmount.add(\n        lpTotalDistributedAmount\n      );\n\n      const pushRewardsDistributed = await this.getPushRewardsDistributed();\n\n      resolve({\n        totalValueLocked,\n        pushPrice,\n        epochEndTimestamp,\n        totalDistributedAmount,\n        pushRewardsDistributed,\n        currentEpoch: currentEpochPUSH,\n        lpToPushRatio\n      });\n    });\n  };\n\n  // 1. Listen for Subscribe Async\n  getPUSHPoolStats = async () => {\n    return new Promise(async (resolve, reject) => {\n      const epnsToken = this.state.epnsToken;\n      const staking = this.state.staking;\n      const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\n\n      const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\n      const totalEpochPUSH = (await yieldFarmingPUSH.NR_OF_EPOCHS()).toString();\n\n      const genesisEpochAmount = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountPUSH));\n      const deprecationPerEpoch = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochPUSH));\n\n      const rewardForCurrentEpoch = this.calcTotalAmountPerEpoch(\n        genesisEpochAmount,\n        currentEpochPUSH,\n        deprecationPerEpoch\n      );\n\n      this.state.rewardForCurrentEpochPush = rewardForCurrentEpoch;\n\n      const poolBalance = await yieldFarmingPUSH.getPoolSize(\n        currentEpochPUSH.add(1)\n      );\n\n      const stakingAPR = this.calcStakingAPR(\n        genesisEpochAmount,\n        currentEpochPUSH,\n        deprecationPerEpoch,\n        poolBalance,\n      );\n\n      resolve({\n        currentEpochPUSH,\n        totalEpochPUSH,\n        rewardForCurrentEpoch,\n        poolBalance,\n        stakingAPR\n      });\n    });\n  };\n\n  getLPPoolStats = async (poolStats) => {\n    return new Promise(async (resolve, reject) => {\n      const epnsToken = this.state.epnsToken;\n      const staking = this.state.staking;\n      const yieldFarmingLP = this.state.yieldFarmingLP;\n\n      const currentEpochPUSH = await yieldFarmingLP.getCurrentEpoch();\n      const totalEpochPUSH = (await yieldFarmingLP.NR_OF_EPOCHS()).toString();\n      const genesisEpochAmount = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountLP));\n      const deprecationPerEpoch = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochLP));\n\n      const rewardForCurrentEpoch = this.calcTotalAmountPerEpoch(\n        genesisEpochAmount,\n        currentEpochPUSH,\n        deprecationPerEpoch\n      );\n\n      this.state.rewardForCurrentEpochLP = rewardForCurrentEpoch;\n\n      const poolBalance = await yieldFarmingLP.getPoolSize(\n        currentEpochPUSH.add(1)\n      );\n\n      const stakingAPR = await this.calcLPPoolAPR(\n        genesisEpochAmount,\n        currentEpochPUSH,\n        deprecationPerEpoch,\n        poolBalance,\n        poolStats\n      );\n\n      resolve({\n        currentEpochPUSH,\n        totalEpochPUSH,\n        rewardForCurrentEpoch,\n        poolBalance,\n        stakingAPR\n      });\n    });\n  };\n\n  // 1. Listen for Subscribe Async\n  getUserData = async (contract) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.account) {\n        const currentEpochPUSH = await contract.getCurrentEpoch();\n\n        const potentialUserReward = (await this.calculateUserEpochReward(currentEpochPUSH, contract)).toFixed(2)\n\n        const epochStakeNext = await contract.getEpochStake(\n          this.state.account,\n          currentEpochPUSH.add(1)\n        );\n\n        let totalAccumulatedReward = 0\n\n        for(var i=0; i<=currentEpochPUSH.sub(1).toNumber(); i++){\n          const epochReward = await this.calculateUserEpochReward(i, contract)\n          totalAccumulatedReward = totalAccumulatedReward + epochReward\n        }\n\n        totalAccumulatedReward = totalAccumulatedReward.toFixed(2)\n        const lastEpochIdHarvested = (await contract.lastEpochIdHarvested(this.state.account)).toNumber()\n\n        let totalAvailableReward = 0\n\n        for(var i = lastEpochIdHarvested + 1; i<=currentEpochPUSH.sub(1).toNumber(); i++){\n          const epochReward = await this.calculateUserEpochReward(i, contract)\n          totalAvailableReward = totalAvailableReward + epochReward\n        }\n        totalAvailableReward = totalAvailableReward.toFixed(2)\n\n        resolve({\n          potentialUserReward,\n          epochStakeNext,\n          totalAccumulatedReward,\n          totalAvailableReward\n        });\n      }\n    });\n  };\n\n  getPushRewardsDistributed = async () => {\n    const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\n    const yieldFarmingLP = this.state.yieldFarmingLP;\n\n    const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\n    const genesisEpochAmountPUSH = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountPUSH))\n    const deprecationPerEpochPUSH = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochPUSH))\n    const currentEpochLP = await yieldFarmingLP.getCurrentEpoch();\n    const genesisEpochAmountLP = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountLP))\n    const deprecationPerEpochLP = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochLP))\n\n    let pushPoolRewardsDistributed = ethers.BigNumber.from(0);\n    let lpPoolRewardsDistributed = ethers.BigNumber.from(0);\n\n    for(var i=0; i<currentEpochLP.toNumber(); i++){\n      const rewardForCurrentEpochLP = this.calcTotalAmountPerEpoch(\n        genesisEpochAmountLP,\n        ethers.BigNumber.from(i),\n        deprecationPerEpochLP\n      );\n\n      lpPoolRewardsDistributed = lpPoolRewardsDistributed.add(rewardForCurrentEpochLP);\n\n      const rewardForCurrentEpochPUSH = this.calcTotalAmountPerEpoch(\n        genesisEpochAmountPUSH,\n        ethers.BigNumber.from(i),\n        deprecationPerEpochPUSH\n      );\n\n      pushPoolRewardsDistributed = pushPoolRewardsDistributed.add(rewardForCurrentEpochPUSH);\n    }\n\n    return pushPoolRewardsDistributed.add(lpPoolRewardsDistributed)\n  }\n\n  calcTotalAmountPerEpoch = (\n    genesisEpochAmount,\n    epochId,\n    deprecationPerEpoch\n  ) => {\n    return genesisEpochAmount.sub(epochId.mul(deprecationPerEpoch));\n  };\n\n  calcAnnualEpochReward = (\n    genesisEpochAmount,\n    epochId,\n    deprecationPerEpoch\n  ) => {\n    // get current epoch reward\n    const currentEpochReward = this.calcTotalAmountPerEpoch(genesisEpochAmount, epochId, deprecationPerEpoch)\n\n    const weeks = 52\n    const depreciate = deprecationPerEpoch.mul(weeks * (weeks - 1)).div(2)\n\n    const annualEpochReward = (currentEpochReward.mul(weeks)).sub(depreciate)\n\n    return annualEpochReward\n  }\n\n  calcStakingAPR = (\n    genesisEpochAmount,\n    epochId,\n    deprecationPerEpoch,\n    totalStaked\n  ) => {\n    // get annual rewards\n    const annualRewards = this.calcAnnualEpochReward(genesisEpochAmount, epochId, deprecationPerEpoch)\n\n    const apr = annualRewards.mul(1000000).div(totalStaked)\n    const aprFormatted = (parseInt(apr.toString())/10000).toFixed(2)\n\n    return aprFormatted\n  }\n\n  calcLPPoolAPR = async (\n    genesisEpochAmount,\n    epochId,\n    deprecationPerEpoch,\n    totalStaked,\n    poolStats\n  ) => {\n    // get annual rewards\n    const annualRewards = this.calcAnnualEpochReward(genesisEpochAmount, epochId, deprecationPerEpoch)\n\n    const apr = annualRewards.mul(1000000).div(totalStaked)\n    const aprFormatted = (parseInt(apr.toString())/(10000 * poolStats.lpToPushRatio)).toFixed(2)\n\n    // console.log(annualRewards.toString(), genesisEpochAmount.toString())\n    // if (poolStats) {\n    //   console.log(poolStats.totalValueLocked)\n    //   console.log(poolStats[\"lpToPushRatio\"])\n    // }\n\n    return aprFormatted\n\n  }\n\n  calculateUserEpochReward = async (\n    epochId,\n    contract\n  ) => {\n      const epochStake = tokenBNtoNumber(await contract.getEpochStake(\n        this.state.account,\n        epochId\n      ));\n\n      const poolSize = tokenBNtoNumber(await contract.getPoolSize(epochId));\n\n      let potentialUserReward = 0;\n      if (poolSize > 0) {\n        if (contract.address == addresses.yieldFarmLP) {\n          const rewardForCurrentEpoch = tokenBNtoNumber(this.state.rewardForCurrentEpochLP)\n          potentialUserReward = epochStake / poolSize * rewardForCurrentEpoch\n        }\n        else {\n          const rewardForCurrentEpoch = tokenBNtoNumber(this.state.rewardForCurrentEpochPush)\n          potentialUserReward = epochStake / poolSize * rewardForCurrentEpoch\n        }\n\n      }\n\n      return potentialUserReward\n  }\n}\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\n\nimport { AiFillInfoCircle } from 'react-icons/ai';\nimport { Tooltip } from \"@material-ui/core\";\n\n// Faucet URLs\nfunction InfoTooltip({title}) {\n  // render\n  return (\n    <Tooltip style={{marginLeft: \"5px\"}} title={title}>\n        <span>\n            <AiFillInfoCircle style={{color: \"white\"}} />\n        </span>\n    </Tooltip>\n  );\n}\n\n// Export Default\nexport default InfoTooltip;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\n\nimport styled, { css, keyframes } from \"styled-components\";\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\nimport InfoTooltip from \"components/InfoTooltip\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { AnimateOnChange } from \"react-animation\";\nimport Loader from \"react-loader-spinner\";\nimport Blockies from \"components/BlockiesIdenticon\";\n\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\nconst ethers = require(\"ethers\");\n\nconst bn = function(number, defaultValue = null) { if (number == null) { if (defaultValue == null) { return null } number = defaultValue } return ethers.BigNumber.from(number) }\n\nconst tokens = function (amount) { return (bn(amount).mul(bn(10).pow(18))).toString() }\nconst tokensBN = function (amount) { return (bn(amount).mul(bn(10).pow(18))) }\nconst bnToInt = function (bnAmount) { return bnAmount.div(bn(10).pow(18)) }\n\n// Create Header\nexport default function PoolCard({\n  poolName,\n  poolAddress,\n  tokenAddress,\n  getPoolStats,\n  getPUSHPoolStats,\n  getUserData,\n  pushPoolStats,\n  userData,\n}) {\n  const { active, error, account, library, chainId } = useWeb3React();\n  const [depositAmountToken, setDepositAmountToken] = React.useState(0);\n  const [withdrawAmountToken, setWithdrawAmountToken] = React.useState(0);\n  const [harvestEpochValue, setHarvestEpochValue] = React.useState(0);\n  const [txInProgress, setTxInProgress] = React.useState(false);\n\n  const [showDepositItem, setShowDepositItem] = React.useState(false);\n\n  const [depositApproved, setDepositApprove] = React.useState(false);\n  const [txInProgressApprDep, setTxInProgressApprDep] = React.useState(false);\n\n  const [txInProgressDep, setTxInProgressDep] = React.useState(false);\n  const [showDepSlip, setShowDepSlip] = React.useState(null);\n\n  const [txInProgressWithdraw, setTxInProgressWithdraw] = React.useState(false);\n\n  const [txInProgressMassHarvest, setTxInProgressMassHarvest] = React.useState(false);\n\n  React.useEffect(() => {\n    // Check if the account has approved deposit\n    checkApprDeposit();\n\n  }, [depositAmountToken]);\n\n  const checkApprDeposit = async () => {\n    if (depositAmountToken <= 0) {\n      setDepositApprove(false);\n      return;\n    }\n    setTxInProgressApprDep(true);\n\n    var signer = library.getSigner(account);\n    const tokenAddr = poolName == \"Uniswap LP Pool (UNI-V2)\" ? addresses.epnsLPToken : addresses.epnsToken;\n    let token = new ethers.Contract(tokenAddr, abis.epnsToken, signer);\n\n    const allowance = await token.allowance(account, addresses.staking);\n    if (allowance.gte(bn(depositAmountToken))) {\n      setDepositApprove(true);\n    }\n    else {\n      setDepositApprove(false);\n    }\n\n    setTxInProgressApprDep(false);\n  }\n\n  const fillMax = async() => {\n    var signer = library.getSigner(account);\n    const tokenAddr = poolName == \"Uniswap LP Pool (UNI-V2)\" ? addresses.epnsLPToken : addresses.epnsToken;\n    let token = new ethers.Contract(tokenAddr, abis.epnsToken, signer);\n\n    let balance = bnToInt(await token.balanceOf(account));\n    setDepositAmountToken(parseInt(balance.toString().replace(/\\D/,'')) || 0)\n  }\n\n  const approveDeposit = async () => {\n    if (depositApproved || txInProgressApprDep) {\n      return\n    }\n\n    setTxInProgressApprDep(true);\n\n    var signer = library.getSigner(account);\n    let epnsToken = new ethers.Contract(tokenAddress, abis.epnsToken, signer);\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\n\n    const uintMax = bn(2).pow(bn(256)).sub(1)\n\n    const tx = epnsToken.approve(\n      staking.address,\n      uintMax\n    );\n\n    tx.then(async (tx) => {\n      let txToast = toast.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      try {\n        await library.waitForTransaction(tx.hash);\n\n        toast.update(txToast, {\n          render: \"Transaction Completed!\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n        setTxInProgressApprDep(false);\n        setDepositApprove(true);\n\n      } catch (e) {\n        toast.update(txToast, {\n          render: \"Transaction Failed! (\" + e.name + \")\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        setTxInProgressApprDep(false);\n      }\n    }).catch((err) => {\n      toast.dark(\"Transaction Cancelled!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTxInProgressApprDep(false);\n    });\n  }\n\n  const depositAmountTokenFarmSingleTx = async () => {\n    if (txInProgressDep || !approveDeposit) {\n      return\n    }\n\n    setTxInProgressDep(true)\n\n    var signer = library.getSigner(account);\n    let epnsToken = new ethers.Contract(tokenAddress, abis.epnsToken, signer);\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\n    console.log(depositAmountToken);\n\n    const tx2 = staking.deposit(\n      tokenAddress,\n      ethers.BigNumber.from(depositAmountToken).mul(\n        ethers.BigNumber.from(10).pow(18)\n      )\n    );\n\n    tx2\n      .then(async (tx) => {\n        let txToast = toast.dark(\n          <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n          {\n            position: \"bottom-right\",\n            autoClose: false,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          }\n        );\n\n        try {\n          await library.waitForTransaction(tx.hash);\n\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n\n          getPoolStats();\n          getPUSHPoolStats(pushPoolStats);\n          getUserData();\n\n          setTxInProgressDep(false);\n          setShowDepSlip(true);\n          // window.location.reload();\n        } catch (e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000,\n          });\n\n          setTxInProgressDep(false);\n        }\n      })\n      .catch((err) => {\n        toast.dark(\"Transaction Cancelled!\", {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        setTxInProgressDep(false);\n      });\n  };\n\n  const withdrawAmountTokenFarmAutomatic = async () => {\n    if (txInProgressWithdraw) {\n      return;\n    }\n\n    setTxInProgressWithdraw(true);\n    const withdrawAmount = formatTokens(userData.epochStakeNext);\n\n    if (withdrawAmount == 0) {\n      toast.dark(\"Nothing to Withdraw!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTxInProgressWithdraw(false);\n      return;\n    }\n\n    var signer = library.getSigner(account);\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\n\n    const tx = staking.withdraw(\n      tokenAddress,\n      ethers.BigNumber.from(withdrawAmount).mul(\n        ethers.BigNumber.from(10).pow(18)\n      )\n    );\n\n    tx.then(async (tx) => {\n      let txToast = toast.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      try {\n        await library.waitForTransaction(tx.hash);\n\n        toast.update(txToast, {\n          render: \"Transaction Completed!\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n\n        setTxInProgressWithdraw(false);\n\n        getPoolStats();\n        getPUSHPoolStats(pushPoolStats);\n        getUserData();\n      } catch (e) {\n        toast.update(txToast, {\n          render: \"Transaction Failed! (\" + e.name + \")\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        setTxInProgressWithdraw(false);\n      }\n    }).catch((err) => {\n      toast.dark(\"Transaction Cancelled!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTxInProgressWithdraw(false);\n    });\n  };\n\n  const harvestTokens = async () => {\n    var signer = library.getSigner(account);\n    let yieldFarmingPUSH = new ethers.Contract(\n      poolAddress,\n      abis.yieldFarming,\n      signer\n    );\n\n    if (harvestEpochValue) {\n      const tx = yieldFarmingPUSH.harvest(harvestEpochValue);\n      tx.then(async (tx) => {\n        let txToast = toast.dark(\n          <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n          {\n            position: \"bottom-right\",\n            autoClose: false,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          }\n        );\n\n        try {\n          await library.waitForTransaction(tx.hash);\n\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n\n          setTxInProgress(false);\n        } catch (e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000,\n          });\n\n          setTxInProgress(false);\n        }\n      }).catch((err) => {\n        toast.dark(\"Transaction Cancelled!\", {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        setTxInProgress(false);\n      });\n    }\n  };\n\n  const massHarvestTokensAll = async () => {\n    if (txInProgressMassHarvest) {\n      return;\n    }\n\n    if (!pushPoolStats.currentEpochPUSH || pushPoolStats.currentEpochPUSH == 1) {\n      toast.dark(\"Harvest unlocks from Epoch 2!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      return;\n    }\n    setTxInProgressMassHarvest(true);\n\n    console.log(poolAddress);\n\n    var signer = library.getSigner(account);\n    let yieldFarmingPUSH = new ethers.Contract(\n      poolAddress,\n      abis.yieldFarming,\n      signer\n    );\n    const tx = yieldFarmingPUSH.massHarvest();\n\n\n    tx.then(async (tx) => {\n      let txToast = toast.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      try {\n        await library.waitForTransaction(tx.hash);\n\n        toast.update(txToast, {\n          render: \"Transaction Completed!\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n\n        setTxInProgressMassHarvest(false);\n      } catch (e) {\n        toast.update(txToast, {\n          render: \"Transaction Failed! (\" + e.name + \")\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        setTxInProgressMassHarvest(false);\n      }\n    }).catch((err) => {\n      toast.dark(\"Transaction Cancelled!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTxInProgressMassHarvest(false);\n    });\n  };\n\n  const formatTokens = (tokens) => {\n    if (tokens) {\n      return tokens.div(ethers.BigNumber.from(10).pow(18)).toString();\n    }\n  };\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return (\n    <>\n    <Item margin=\"20px\" align=\"stretch\" self=\"stretch\" border=\"1px solid #e1e1e1\" radius=\"12px\">\n      <Item>\n        <Item>\n          <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n            <Span bg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"} size=\"0.8em\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">{poolName}</Span>\n          </H2>\n          <Item\n            align=\"flex-end\"\n            self=\"stretch\"\n          >\n            <H3>\n              <Span>Current APR </Span><Span bg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"} padding=\"2px 8px\" weight=\"600\" color=\"#fff\"><b>{pushPoolStats.stakingAPR}%</b></Span>\n            </H3>\n          </Item>\n        </Item>\n\n        <ItemH margin=\"10px 0px 0px 0px\" self=\"stretch\" items=\"stretch\" bg=\"#f1f1f1\">\n          <PoolContainer bg=\"#fff\" margin=\"5px 15px\" radius=\"12px\" border=\"1px solid #ddd\" borderBottom=\"8px solid #e1e1e1\">\n            <PoolBoxTitle margin=\"15px 10px\" fg=\"#999\" textTransform=\"uppercase\" size=\"10px\" spacing=\"0.2em\">Current Reward</PoolBoxTitle>\n            <PoolBoxMsg\n              bg=\"transparent\"\n              fg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"}\n              size=\"16px\"\n              margin=\"-15px 5px 10px 5px\"\n            >\n              {numberWithCommas(formatTokens(pushPoolStats.rewardForCurrentEpoch))} PUSH\n            </PoolBoxMsg>\n          </PoolContainer>\n\n          <PoolContainer bg=\"#fff\" margin=\"5px 15px\" radius=\"12px\" border=\"1px solid #ddd\" borderBottom=\"8px solid #e1e1e1\">\n            <PoolBoxTitle margin=\"15px 10px\" fg=\"#999\" textTransform=\"uppercase\" size=\"10px\" spacing=\"0.2em\">Total Staked</PoolBoxTitle>\n            <PoolBoxMsg\n              bg=\"transparent\"\n              fg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"}\n              size=\"16px\"\n              margin=\"-15px 5px 10px 5px\"\n            >\n              {numberWithCommas(formatTokens(pushPoolStats.poolBalance))} {poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"UNI-V2\" : \"PUSH\"}\n            </PoolBoxMsg>\n          </PoolContainer>\n        </ItemH>\n\n        <Item\n          self=\"stretch\"\n          align=\"flex-end\"\n          margin=\"0px 0px 10px 0px\"\n        >\n          <EpochDisplayer>\n            <Span padding=\"0px 5px 0px 0px\">Current Epoch</Span><B>{pushPoolStats.currentEpochPUSH.toString()}/{pushPoolStats.totalEpochPUSH}</B>\n          </EpochDisplayer>\n        </Item>\n      </Item>\n\n      <Item padding=\"10px 20px 0px 20px\" align=\"stretch\" self=\"stretch\">\n        <ItemH margin=\"0px\">\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\n            <PoolBoxTitle>User Deposit</PoolBoxTitle>\n            <PoolBoxMsg>{formatTokens(userData.epochStakeNext)} {poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"UNI-V2\" : \"PUSH\"}</PoolBoxMsg>\n          </Item>\n\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\n              <PoolBoxTitle>Rewards Claimed <InfoTooltip title={\"The total rewards you have already claimed from the pool. This includes all the rewards including the ones already harvested.\"} /></PoolBoxTitle>\n              <PoolBoxMsg>{(userData.totalAccumulatedReward - userData.totalAvailableReward).toFixed(2)} PUSH</PoolBoxMsg>\n          </Item>\n        </ItemH>\n\n        <ItemH margin=\"0px\">\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\n            <PoolBoxTitle>Current Epoch Reward <InfoTooltip title={\"This is only an estimation for the user's reward that they might get after the epoch. This might change depending upon deposits from other users.\"} /></PoolBoxTitle>\n            <PoolBoxMsg>{userData.potentialUserReward} PUSH</PoolBoxMsg>\n          </Item>\n\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\n            <PoolBoxTitle>Available for Harvest <InfoTooltip title={\"The rewards that are currently available for harvesting and can be immediately transferred to your address.\"} /></PoolBoxTitle>\n            <PoolBoxMsg>{userData.totalAvailableReward} PUSH</PoolBoxMsg>\n          </Item>\n        </ItemH>\n      </Item>\n\n      {showDepositItem &&\n        <Item bg=\"#ddd\" radius=\"12px\" margin=\"20px 0px -10px 0px\" padding=\"10px 20px\" align=\"stretch\" self=\"stretch\">\n\n          {!showDepSlip &&\n            <>\n              <Item>\n                <MaxButton\n                  bg=\"#000\"\n                  onClick={fillMax}\n                  position=\"absolute\"\n                >\n                  Max\n                </MaxButton>\n\n                <Input\n                  placeholder=\"Number of Tokens\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  self=\"stretch\"\n                  bg=\"#fff\"\n                  value={depositAmountToken}\n                  onChange={(e) => {\n                    setDepositAmountToken(parseInt(e.target.value.replace(/\\D/,'')) || 0)\n                  }}\n                />\n              </Item>\n\n              <ItemH>\n                <ButtonAlt\n                  bg={depositApproved ? \"#999\" : \"#e20880\"}\n                  onClick={approveDeposit}\n                  disabled={depositApproved ? true : false}\n                >\n                  {!depositApproved && !txInProgressApprDep &&\n                    <Span color=\"#fff\" weight=\"400\">Approve</Span>\n                  }\n                  {txInProgressApprDep && !depositApproved &&\n                    <Loader\n                      type=\"Oval\"\n                      color=\"#fff\"\n                      height={12}\n                      width={12}\n                    />\n                  }\n                  {!txInProgress && depositApproved &&\n                    <Span color=\"#fff\" weight=\"600\">Approved</Span>\n                  }\n                </ButtonAlt>\n                <ButtonAlt\n                  bg={!depositApproved ? \"#999\" : \"#e20880\"}\n                  disabled={!depositApproved ? true : false}\n                  onClick={depositAmountTokenFarmSingleTx}\n                >\n                  {!txInProgressDep &&\n                    <Span color=\"#fff\" weight=\"400\">Deposit</Span>\n                  }\n                  {txInProgressDep &&\n                    <Loader\n                      type=\"Oval\"\n                      color=\"#fff\"\n                      height={12}\n                      width={12}\n                    />\n                  }\n                </ButtonAlt>\n              </ItemH>\n            </>\n          }\n\n          {showDepSlip &&\n            <Span\n              bg=\"#e20880\"\n              color=\"#fff\"\n              align=\"center\"\n              textTransform=\"uppercase\"\n              spacing=\"0.1em\"\n              size=\"14px\"\n              weight=\"600\"\n              padding=\"10px\"\n              self=\"stretch\"\n            >\n              Deposit Successful!\n            </Span>\n          }\n\n        </Item>\n      }\n\n      <ItemH padding=\"0px 20px 0px 20px\" margin=\"20px 0px 20px 0px\" align=\"center\" self=\"stretch\">\n        {!showDepositItem &&\n          <ButtonAlt\n            bg=\"#e20880\"\n            onClick={() => setShowDepositItem(!showDepositItem)}\n          >\n            {!txInProgressDep &&\n              <Span color=\"#fff\" weight=\"400\">Deposit</Span>\n            }\n            {txInProgressApprDep &&\n              <Loader\n                type=\"Oval\"\n                color=\"#fff\"\n                height={12}\n                width={12}\n              />\n            }\n          </ButtonAlt>\n        }\n\n        <ButtonAlt\n          bg=\"#000\"\n          onClick={() => withdrawAmountTokenFarmAutomatic()}\n        >\n          {!txInProgressWithdraw &&\n            <Span color=\"#fff\" weight=\"400\">Withdraw</Span>\n          }\n          {txInProgressWithdraw &&\n            <Loader\n              type=\"Oval\"\n              color=\"#fff\"\n              height={12}\n              width={12}\n            />\n          }\n        </ButtonAlt>\n\n        <ButtonAlt\n          bg=\"#000\"\n          onClick={() => massHarvestTokensAll()}\n        >\n          {!txInProgressMassHarvest &&\n            <Span color=\"#fff\" weight=\"400\">Harvest</Span>\n          }\n          {txInProgressMassHarvest &&\n            <Loader\n              type=\"Oval\"\n              color=\"#fff\"\n              height={12}\n              width={12}\n            />\n          }\n        </ButtonAlt>\n      </ItemH>\n    </Item>\n    </>\n  );\n}\n\n// toast customize\nconst LoaderToast = ({ msg, color }) => (\n  <Toaster>\n    <Loader type=\"Oval\" color={color} height={30} width={30} />\n    <ToasterMsg>{msg}</ToasterMsg>\n  </Toaster>\n);\n\n\nconst MaxButton = styled(Button)`\n  position: absolute;\n  right: 0;\n  padding: 4px 8px;\n  margin: 5px;\n  border-radius: 4px;\n  font-size: 12px;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 0.1em;\n`\n\nconst PoolContainer = styled(Item)`\n  border-bottom: ${props => props.borderBottom || \"none\"};\n`\n\nconst PoolBoxTitle = styled(Span)`\n  background: ${props => props.bg || 'transparent'};\n  color: ${props => props.fg || '#fff'};\n  font-weight: 600;\n  font-size: ${props => props.size || '12px'};\n  margin: ${props => props.margin || '10px 5px'};\n  letter-spacing: 0.1em;\n`\n\nconst PoolBoxMsg = styled(Span)`\n  background: ${props => props.bg || '#fff'};\n  color: ${props => props.fg || '#000'};\n  font-weight: 600;\n  font-size: ${props => props.size || '12px'};\n  margin: ${props => props.margin || '5px 5px 10px 5px'};\n  letter-spacing: 0.1em;\n  padding: 4px 15px;\n  border-radius: 10px;\n`\n\nconst Container = styled.div`\n  padding: 18px;\n  background: #fff;\n  flex: 1;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 10px;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst MainTitle = styled.h2`\n  text-transform: uppercase;\n`;\n\nconst Heading = styled.h5`\n  font-weight: 600;\n  color: #e20880;\n  text-transform: uppercase;\n`;\n\nconst EpochDisplayer = styled(Span)`\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  font-size: 12px;\n  background: #f1f1f1;\n  padding: 0px 10px 0px 10px;\n  position: relative;\n  height: 23px;\n  align-items: center;\n  text-align: center;\n  display: flex;\n\n  &:after {\n    width: 0;\n    height: 0;\n    border-top: 0px solid transparent;\n    border-bottom: 25px solid transparent;\n    border-right: 10px solid #f1f1f1;\n    left: -10px;\n    content: '';\n    position: absolute;\n  }\n`\n\nconst ButtonAlt = styled(Button)`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      &:hover {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n      &:active {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n    `}\n`;\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n","import React from \"react\";\n\nimport styled, { css, keyframes } from \"styled-components\";\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { BsChevronExpand } from 'react-icons/bs';\n\nimport { AnimateOnChange } from \"react-animation\";\nimport Loader from \"react-loader-spinner\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport YieldFarmingDataStore from \"singletons/YieldFarmingDataStore\";\nimport PoolCard from \"components/PoolCard\";\n\nconst ethers = require(\"ethers\");\n\n// Create Header\nfunction YieldFarming() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [poolStats, setPoolStats] = React.useState(null);\n  const [pushPoolStats, setPushPoolStats] = React.useState(null);\n  const [lpPoolStats, setLpPoolStats] = React.useState(null);\n  const [userDataPUSH, setUserDataPUSH] = React.useState(null);\n  const [userDataLP, setUserDataLP] = React.useState(null);\n\n  const [formattedDuration, setFormattedDuration] = React.useState(\"\");\n\n  const [epnsToken, setEpnsToken] = React.useState(null);\n  const [staking, setStaking] = React.useState(null);\n  const [yieldFarmingPUSH, setYieldFarmingPUSH] = React.useState(null);\n  const [yieldFarmingLP, setYieldFarmingLP] = React.useState(null);\n  const [uniswapV2Router02, setUniswapV2Router02] = React.useState(null);\n\n  const [showAnswers, setShowAnswers] = React.useState([]);\n\n  const [loadingUserData, setLoadingUserData] = React.useState(false);\n\n  const toggleShowAnswer = (id) => {\n    let newShowAnswers = [...showAnswers];\n    newShowAnswers[id] = !newShowAnswers[id];\n\n    setShowAnswers(newShowAnswers);\n  }\n\n  const getPoolStats = React.useCallback(async () => {\n    const poolStats = await YieldFarmingDataStore.instance.getPoolStats();\n\n    setPoolStats({ ...poolStats });\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\n\n  const getPUSHPoolStats = React.useCallback(async () => {\n    const pushPoolStats = await YieldFarmingDataStore.instance.getPUSHPoolStats();\n\n    setPushPoolStats({ ...pushPoolStats });\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\n\n  const getLPPoolStats = React.useCallback(async (poolStats) => {\n    const lpPoolStats = await YieldFarmingDataStore.instance.getLPPoolStats(poolStats);\n\n    setLpPoolStats({ ...lpPoolStats });\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\n\n  const getUserDataPUSH = React.useCallback(async () => {\n    const userDataPUSH = await YieldFarmingDataStore.instance.getUserData(yieldFarmingPUSH);\n\n    setUserDataPUSH({ ...userDataPUSH });\n  }, [yieldFarmingPUSH]);\n\n  const getUserDataLP = React.useCallback(async () => {\n    const userDataLP = await YieldFarmingDataStore.instance.getUserData(yieldFarmingLP);\n\n    setUserDataLP({ ...userDataLP });\n  }, [yieldFarmingLP]);\n\n  const formatTokens = (tokens) => {\n    if (tokens) {\n      return tokens.div(ethers.BigNumber.from(10).pow(18)).toString();\n    }\n  };\n\n  const getFormattedDuration = () => {\n    if (poolStats?.epochEndTimestamp) {\n      const epochEndTimestamp = poolStats.epochEndTimestamp.toNumber();\n\n      const duration = epochEndTimestamp - Math.floor(new Date() / 1000);\n\n      if(duration < 0) {\n        getPoolStats()\n      }\n\n      const day = parseInt(duration / 86400);\n      const hour = parseInt((duration - day * 86400) / 3600);\n\n      const minutes = parseInt((duration - (day * 86400 + hour * 3600)) / 60);\n      const seconds = duration - (day * 86400 + hour * 3600 + minutes * 60);\n\n      setFormattedDuration(`${day}D ${hour}H ${minutes}M ${seconds}S`);\n    }\n  };\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      getFormattedDuration();\n    }, 1000);\n  });\n\n  React.useEffect(() => {\n    let epnsToken = new ethers.Contract(\n      addresses.epnsToken,\n      abis.epnsToken,\n      library\n    );\n\n    let staking = new ethers.Contract(addresses.staking, abis.staking, library);\n    let yieldFarmingPUSH = new ethers.Contract(\n      addresses.yieldFarmPUSH,\n      abis.yieldFarming,\n      library\n    );\n\n    let yieldFarmingLP = new ethers.Contract(\n      addresses.yieldFarmLP,\n      abis.yieldFarming,\n      library\n    );\n\n    let uniswapV2Router02Instance = new ethers.Contract(\n      addresses.uniswapV2Router02,\n      abis.uniswapV2Router02,\n      library\n    );\n\n    setEpnsToken(epnsToken);\n    setStaking(staking);\n    setYieldFarmingPUSH(yieldFarmingPUSH);\n    setYieldFarmingLP(yieldFarmingLP);\n    setUniswapV2Router02(uniswapV2Router02Instance)\n\n    if (!!(library && account)) {\n      var signer = library.getSigner(account);\n\n      let epnsToken = new ethers.Contract(\n        addresses.epnsToken,\n        abis.epnsToken,\n        signer\n      );\n      let staking = new ethers.Contract(\n        addresses.staking,\n        abis.staking,\n        signer\n      );\n      let yieldFarmingPUSH = new ethers.Contract(\n        addresses.yieldFarmPUSH,\n        abis.yieldFarming,\n        signer\n      );\n      let yieldFarmingLP = new ethers.Contract(\n        addresses.yieldFarmLP,\n        abis.yieldFarming,\n        signer\n      );\n\n      let uniswapV2Router02Instance = new ethers.Contract(\n        addresses.uniswapV2Router02,\n        abis.uniswapV2Router02,\n        signer\n      );\n\n      setEpnsToken(epnsToken);\n      setStaking(staking);\n      setYieldFarmingPUSH(yieldFarmingPUSH);\n      setYieldFarmingLP(yieldFarmingLP);\n      setUniswapV2Router02(uniswapV2Router02Instance);\n  }\n  }, [account]);\n\n  React.useEffect(() => {\n    if (epnsToken != null && staking != null && yieldFarmingPUSH != null) {\n      // Instantiate Data Stores\n      YieldFarmingDataStore.instance.init(\n        account,\n        epnsToken,\n        staking,\n        yieldFarmingPUSH,\n        yieldFarmingLP,\n        uniswapV2Router02\n      );\n\n      getPoolStats();\n\n      // setpoolStats(YieldFarmingDataStore.instance.state);\n    }\n  }, [getPoolStats]);\n\n  React.useEffect(() => {\n    if (poolStats) {\n      syncData(poolStats);\n    }\n\n  }, [poolStats]);\n\n  const syncData = async (poolStats) => {\n    getPUSHPoolStats();\n    getLPPoolStats(poolStats);\n\n    getUserDataPUSH();\n    getUserDataLP();\n  }\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return (\n    <Section>\n      {poolStats ? (\n        <>\n          <Content theme=\"#f3f3f3\">\n            <ItemH margin=\"0px 15px 0px 15px\" align=\"stretch\">\n              <StatsCard\n                bg=\"#fff\"\n              >\n                <StatsHeading bg=\"#e20880\">Total Value Locked</StatsHeading>\n                <StatsContent>\n                  <StatsInnerTitle>{`$ ${numberWithCommas(poolStats.totalValueLocked.toFixed(2))}`}</StatsInnerTitle>\n                </StatsContent>\n                <StatsPreview color=\"#e20880\">TVL</StatsPreview>\n              </StatsCard>\n\n              <StatsCard\n                bg=\"#fff\"\n              >\n                <StatsHeading bg=\"#35c5f3\">PUSH Rewards Given</StatsHeading>\n                <StatsContent>\n                  <StatsInnerTitle>{numberWithCommas(formatTokens(poolStats.pushRewardsDistributed))}</StatsInnerTitle>\n                  <StatsInnerSub>out of {numberWithCommas(formatTokens(poolStats.totalDistributedAmount))}</StatsInnerSub>\n                </StatsContent>\n                <StatsPreview color=\"#35c5f3\">Rewarded</StatsPreview>\n              </StatsCard>\n\n              <StatsCard\n                bg=\"#fff\"\n              >\n                <StatsHeading bg=\"#674c9f\">Time Left</StatsHeading>\n                <StatsContent>\n                  <StatsInnerTitle>{formattedDuration}</StatsInnerTitle>\n                  <StatsInnerSub>until next epoch</StatsInnerSub>\n                </StatsContent>\n                <StatsPreview color=\"#674c9f\">time left</StatsPreview>\n              </StatsCard>\n\n              <StatsCard\n                bg=\"#fff\"\n              >\n                <StatsHeading bg=\"#000\">PUSH Price</StatsHeading>\n                <StatsContent>\n                  <StatsInnerTitle>{`$ ${poolStats.pushPrice.toFixed(2)}`}</StatsInnerTitle>\n                  <StatsInnerSub>\n                    <a target=\"_blank\" href=\"https://app.uniswap.org/#/swap?inputCurrency=0xf418588522d5dd018b425e472991e52ebbeeeeee\">Uniswap</a>\n                  </StatsInnerSub>\n                </StatsContent>\n                <StatsPreview color=\"#000\">UNISWAP</StatsPreview>\n              </StatsCard>\n            </ItemH>\n          </Content>\n\n          {!(lpPoolStats && userDataLP) && !(pushPoolStats && userDataPUSH)\n            ? <Item padding=\"20px\">\n                <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n              </Item>\n            : <Content padding=\"25px 0px\">\n              <ItemH margin=\"0px 10px 0px 10px\" align=\"stretch\">\n                {\n                  lpPoolStats && userDataLP ? (\n                    <PoolCard\n                      poolName={'Uniswap LP Pool (UNI-V2)'}\n                      poolAddress={addresses.yieldFarmLP}\n                      tokenAddress={addresses.epnsLPToken}\n                      getPoolStats={getPoolStats}\n                      getPUSHPoolStats={getLPPoolStats}\n                      getUserData={getUserDataLP}\n                      pushPoolStats={lpPoolStats}\n                      userData={userDataLP}\n                    />\n                  ) : null\n                }\n                {\n                  pushPoolStats && userDataPUSH ? (\n                    <PoolCard\n                      poolName={'Staking Pool (PUSH)'}\n                      poolAddress={addresses.yieldFarmPUSH}\n                      tokenAddress={addresses.epnsToken}\n                      getPoolStats={getPoolStats}\n                      getPUSHPoolStats={getPUSHPoolStats}\n                      getUserData={getUserDataPUSH}\n                      pushPoolStats={pushPoolStats}\n                      userData={userDataPUSH}\n                    />\n                  ) : null\n                }\n              </ItemH>\n            </Content>\n          }\n        </>\n      ) : (\n        <Item padding=\"20px\">\n          <Loader type=\"Oval\" color=\"#e20880\" height={40} width={40} />\n        </Item>\n      )}\n    </Section>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`\n\nconst StatsCard = styled(Item)`\n  overflow: hidden;\n  min-width: 180px;\n\n  border-radius: 12px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 0px 15px;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst CenterHeading = styled.h2`\n  text-align: center;\n`;\n\nconst PoolContainer = styled.div`\n  display: flex;\n`;\n\nconst StatsHeading = styled(Item)`\n  flex: 0;\n  align-self: stretch;\n  color: #fff;\n  top: 0px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  font-size: 15px;\n  text-align: center;\n  padding: 10px 5px;\n  right: 0;\n  left: 0;\n`\n\nconst StatsContent = styled(Item)`\n  padding: 20px 20px;\n`\n\nconst StatsPreview = styled(Span)`\n  position: absolute;\n  bottom: 5px;\n  right: 10px;\n  font-weight: 600;\n  font-size: 12px;\n  opacity: 0.25;\n  letter-spacing:0.1em;\n  text-transform: uppercase;\n  color: ${props => props.color || '#000'};\n  z-index: -1;\n`\n\nconst StatsInnerTitle = styled.span`\n  font-weight: bold;\n  font-size: 22px;\n  letter-spacing: 0.1em;\n`;\n\nconst StatsInnerSub = styled.span`\n  font-size: 12px;\n  color: #999;\n  font-weight: 600;\n  align-self: flex-end;\n`;\n\n// Export Default\nexport default YieldFarming;\n","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\nimport { parseEther, bigNumber } from 'ethers/utils'\n\n// FeedDB Helper Function\nconst NFTHelper = {\n  getNFTBalance: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      if(contract){\n        contract.balanceOf(user)\n        .then(response => {\n          if (enableLogs) console.log(\"getNFTBalance() --> %o\", response);\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getNFTBalance() --> %o\", err);\n          reject(err);\n        });\n\n      }\n      \n    })\n  },\n\n  getTotalSupply: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.totalSupply()\n        .then(response => {\n          if (enableLogs) console.log(\"getNFTBalance() --> %o\", response);\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getNFTBalance() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n\n  getOwnerOfTokenId: async (tokenId, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.ownerOf(tokenId)\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerOfTokenId() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerOfTokenId() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n\n  getTokenOfOwnerByIndex: async (user, index, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.tokenOfOwnerByIndex(user, index)\n        .then(response => {\n          if (enableLogs) console.log(\"getTokenOfOwnerByIndex() --> %o\", response);\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTokenOfOwnerByIndex() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n\n  getTokenByIndex: async (index, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.tokenByIndex(index)\n        .then(response => {\n          if (enableLogs) console.log(\"getTokenByIndex() --> %o\", response);\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTokenByIndex() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n\n  getTokenMetadata: async (tokenId, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.tokenURI(tokenId)\n        .then(response => {\n          if (enableLogs) console.log(\"getTokenMetadata() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTokenMetadata() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n\n  getTokenMetadatasOfOwner: async (owner, nftContract, rewardsContract) => {\n    const enableLogs = 1;\n\n    return new Promise ((resolve, reject) => {\n      NFTHelper.getNFTBalance(owner, nftContract)\n      .then(async (balance) => {\n        // const balance = await res\n        let NFTDetails = []\n        let promises = []\n      \n      for(let i=0; i<balance; i++){\n        promises.push(NFTHelper.getTokenOfOwnerByIndex(owner, i, nftContract)\n        .then(async tokenId => {\n            await NFTHelper.getClaimable(tokenId, rewardsContract)\n            .then(async claimable => {\n              console.log(\"🚀 ~ file: NFTHelper.js ~ line 102 ~ .then ~ claimable\", claimable)\n\n              await NFTHelper.getTokenMetadata(tokenId, nftContract)\n              .then(async metadata => {\n                if(tokenId != null && metadata != null && claimable != null )\n                NFTDetails.push({id: tokenId, metadata, claimable})\n\n              })\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getClaimable() --> %o\", err);\n              reject(err);\n            });\n        }))\n      }\n      // // wait until all promises are resolved\n      await Promise.all(promises);\n      console.log(\"🚀 ~ file: NFTHelper.js ~ line 83 ~ .then ~ NFTDetails\", NFTDetails)\n      resolve(NFTDetails);\n\n      })\n      .catch(err => {\n        console.log(\"!!!Error, getTokenMetadatasOfOwner() --> %o\", err);\n        reject(err);\n      });\n        \n    })\n  },\n\n  getAllTokenDatas: async (nftContract, rewardsContract) => {\n    const enableLogs = 1;\n\n    return new Promise ((resolve, reject) => {\n      NFTHelper.getNFTBalance(nftContract)\n      .then(async (totalSupply) => {\n        let NFTDetails = []\n        let promises = []\n      \n      for(let i=0; i<totalSupply; i++){\n        promises.push(NFTHelper.getTokenByIndex(i, nftContract)\n        .then(async tokenId => {\n            await NFTHelper.getClaimable(tokenId, rewardsContract)\n            .then(async claimable => {\n              await NFTHelper.getTokenMetadata(tokenId, nftContract)\n              .then(async metadata => {\n                await NFTHelper.getOwnerOfTokenId(tokenId, nftContract)\n                .then(async owner => {\n                  if(tokenId != null && metadata != null && claimable != null && owner != null )\n                  NFTDetails.push({id: tokenId, metadata, owner, claimable})\n                })\n                .catch(err => {\n                  console.log(\"!!!Error, getAllTokenDatas::getOwnerOfTokenId() --> %o\", err);\n                  reject(err);\n                })\n              })\n              .catch(err => {\n                console.log(\"!!!Error, getAllTokenDatas::getTokenMetadata() --> %o\", err);\n                reject(err);\n              })\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getAllTokenDatas::getClaimable() --> %o\", err);\n              reject(err);\n            });\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getAllTokenDatas::getTokenByIndex() --> %o\", err);\n          reject(err);\n        })\n        )\n      }\n      // // wait until all promises are resolved\n      await Promise.all(promises);\n      console.log(\"🚀 ~ file: NFTHelper.js ~ line 83 ~ .then ~ NFTDetails\", NFTDetails)\n      resolve(NFTDetails);\n\n      })\n      .catch(err => {\n        console.log(\"!!!Error, getAllTokenDatas() --> %o\", err);\n        reject(err);\n      });\n        \n    })\n  },\n\n  getTokenData: async (tokenId, nftContract, rewardsContract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n             NFTHelper.getClaimable(tokenId, rewardsContract)\n            .then(async claimable => {\n              await NFTHelper.getTokenMetadata(tokenId, nftContract)\n              .then(async metadata => {\n                await NFTHelper.getOwnerOfTokenId(tokenId, nftContract)\n                .then(async owner => {\n                  if(tokenId != null && metadata != null && claimable != null && owner != null )\n                  resolve({id: tokenId, metadata, owner, claimable});\n                })\n              })\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getTokenData() --> %o\", err);\n              reject(err);\n            });\n    })\n  },\n\n  transferNFT: async (from, to, tokenId, contract) => {\n    const enableLogs = 1;\n\n    return new Promise ((resolve, reject) => {\n      contract.safeTransferFrom(from, to, tokenId)\n        .then(response => {\n          if (enableLogs) console.log(\"transferNFT() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, transferNFT() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n\n  getClaimable: async (tokenId, contract) => {\n    \n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      if(contract){\n        contract.getClaimRewardStatus(tokenId)\n        .then(response => {\n          if (enableLogs) console.log(\"getClaimable() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getClaimable() --> %o\", err);\n          reject(err);\n        });\n\n      }\n      \n    })\n  },\n\n}\n\nexport default NFTHelper;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction DisplayNotice({ title, theme }) {\n  React.useEffect(() => {\n\n  }, [title, theme]);\n\n  // to create blockies\n\n  return (\n    <Container>\n      <AnimateOnChange\n        animationIn=\"fadeIn\"\n        animationOut=\"fadeOut\"\n        durationOut={200}\n      >\n        <Notice theme={theme}>{title}</Notice>\n      </AnimateOnChange>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 400;\n\n  ${props => props.theme === 'primary' && css`\n    background: #e20880;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f3;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f;\n  `};\n`\n\n// Export Default\nexport default DisplayNotice;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const Device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};\n","import React from \"react\";\n\nimport styled, { css, keyframes } from \"styled-components\";\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { Device } from 'assets/Device';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Skeleton from '@yisheng90/react-loading';\nimport { IoIosGift } from 'react-icons/io';\nimport { GiTwoCoins } from 'react-icons/gi';\n\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\nimport { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\n\nimport ReactPlayer from 'react-player'\n\nimport NFTHelper from 'helpers/NFTHelper';\n\n// Create Header\nfunction ViewNFTItem({ NFTObject, nftReadProvider, nftWriteProvider, controlAt, setControlAt, setTokenId}) {\n  const { account, library } = useWeb3React();\n\n  const [NFTRewardsContract, setNFTRewardsContract] = React.useState(null);\n  const [ loading, setLoading ] = React.useState(true);\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!!(library && account)) {\n      let signer = library.getSigner(account);\n      const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\n      setNFTRewardsContract(NFTRewardsInstance);\n    }\n  }, [account,library]);\n\n  React.useEffect(() => {\n    if(NFTObject){\n      setLoading(false);\n    }\n  }, [account, NFTObject]);\n\n  // to claim\n  const handleClaim = async (tokenId) => {\n    if(NFTRewardsContract){\n      setTxInProgress(true)\n      let sendWithTxPromise\n      sendWithTxPromise = await NFTRewardsContract.claimReward(tokenId)\n      const tx = await sendWithTxPromise;\n\n      console.log(tx);\n      console.log(\"waiting for tx to finish\");\n      let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n        position: \"bottom-right\",\n        autoClose: false,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      try {\n        await library.waitForTransaction(tx.hash);\n\n        toast.update(txToast, {\n          render: \"Transaction Completed!\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000\n        });\n\n        setTxInProgress(false);\n      }\n      catch(e) {\n        toast.update(txToast, {\n          render: \"Transaction Failed! (\" + e.name + \")\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n\n        setTxInProgress(false);\n      }\n      setLoading(false);\n    }\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  // render\n  return (\n    <Item\n      key={NFTObject.id}\n    >\n      <ChannelLogo\n        theme={\n          !!account && !!library && account == NFTObject.owner ?\n            \"#e20880\" :\n            !!account && !!library && NFTObject.owner != 0xFbA7Df351ADD4E79099f63E33b2679EDFDD5e2aB ?\n              \"#eee\" :\n              \"#fff\"\n        }\n      >\n        <ChannelLogoOuter>\n          <ChannelLogoInner>\n            {loading &&\n              <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\n            }\n            {!loading &&\n              <ReactPlayer url={`https://ipfs.io/ipfs/${NFTObject.metadata}`} controls={true} playing={false} loop={true}/>\n            }\n            {!!account && !!library && NFTObject.owner != 0xFbA7Df351ADD4E79099f63E33b2679EDFDD5e2aB &&\n              <NFTStatus>\n                <IoIosGift size={20} color=\"#fff\"/>\n                <NFTStatusTitle>\n                  Gifted\n                </NFTStatusTitle>\n              </NFTStatus>\n            }\n\n            {!!account && !!library && NFTObject.claimable &&\n              <NFTClaim>\n                <NFTClaimTitle>\n                  2400 $PUSH\n                </NFTClaimTitle>\n              </NFTClaim>\n            }\n          </ChannelLogoInner>\n        </ChannelLogoOuter>\n\n      {!!account && !!library &&\n        <ItemH>\n\n          <ChannelActions>\n            {loading &&\n              <SkeletonButton>\n                <Skeleton />\n              </SkeletonButton>\n            }\n            {!!account && !!library && account == NFTObject.owner && !loading &&\n              <UnsubscribeButton >\n                <ActionTitle onClick={() => {\n                  setTokenId(NFTObject.id)\n                  setControlAt(2)\n                }}\n                  >Transfer</ActionTitle>\n              </UnsubscribeButton>\n            }\n            {!!account && !!library && account == NFTObject.owner && !loading &&\n                <UnsubscribeButton disabled = {!NFTObject.claimable}>\n                  {txInProgress &&\n                    <ActionLoader>\n                      <Loader\n                       type=\"Oval\"\n                       color=\"#FFF\"\n                       height={16}\n                       width={16}\n                      />\n                    </ActionLoader>\n                  }\n                  {NFTObject.claimable &&\n                    <ActionTitle hideit={txInProgress} onClick={() => {handleClaim(NFTObject.id)}}>Claim $PUSH</ActionTitle>\n                  }\n                  {!NFTObject.claimable &&\n                    <ActionTitle hideit={txInProgress} >Rewards Claimed</ActionTitle>\n                  }\n                </UnsubscribeButton>\n            }\n          </ChannelActions>\n        </ItemH>\n      }\n      </ChannelLogo>\n    </Item>\n  );\n}\n\n// css styles\nconst NFTTextStyle = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`\n\nconst NFTStatus = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n`\n\nconst NFTStatusTitle = styled(NFTTextStyle)`\n  background: #35c4f3;\n`\n\nconst NFTClaim = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n`\n\nconst NFTClaimTitle = styled(NFTTextStyle)`\n  background: #e20880;\n`\n\nconst Container = styled.div`\n  flex: 1;\n  // display: inline;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${props => props.atW + '%' || '100%'};\n  height: ${props => props.atH}px;\n  border-radius: ${props => props.borderRadius || 10}px;\n  margin-bottom: ${props => props.marginBottom || 5}px;\n  margin-right: ${props => props.marginRight || 0}px;\n`\n\nconst ChannelLogo = styled.div`\n  background: ${props => props.theme || '#fff'};\n  max-width: 25%;\n  min-width: 200px;\n  flex: 1;\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: center;\n`\n\nconst ChannelLogoOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`\n\nconst ChannelLogoInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelLogoImg = styled.img`\n  object-fit: contain;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\nconst ChannelTitleLink = styled.div`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n`\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`\n\nconst Subscribers = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst SubscribersCount = styled(ChannelMetaBox)`\n  background: #35c4f3;\n`\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  max-width: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    background: #e20880;\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst ActionTitle = styled.span`\n  font-size: 12px;\n  ${ props => props.hideit && css`\n    visibility: hidden;\n  `};\n`\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n`\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #000;\n`\n\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\n// Export Default\nexport default ViewNFTItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\nimport { Waypoint } from \"react-waypoint\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport NFTHelper from 'helpers/NFTHelper';\nimport { ethers } from \"ethers\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewNFTItem from \"components/ViewNFTItem\";\n\n\n// Create Header\nfunction MyNFTs({controlAt, setControlAt, setTokenId}) {\n  const { account, library } = useWeb3React();\n\n  const [nftReadProvider, setNftReadProvider] = React.useState(null);\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\n  const [NFTRewardsContract, setNFTRewardsContract] = React.useState(null);\n  const [NFTObjects, setNFTObjects] = React.useState([]);\n\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n\n    if (!!(library && account)) {\n      const contractInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, library);\n      setNftReadProvider(contractInstance);\n      let signer = library.getSigner(account);\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer);\n      setNftWriteProvider(signerInstance);\n      const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\n      setNFTRewardsContract(NFTRewardsInstance);\n    }\n  }, [account,library]);\n\n  React.useEffect(() => {\n    if(nftReadProvider && NFTRewardsContract){\n      fetchNFTDetails();\n    }\n  }, [account, nftReadProvider, nftWriteProvider, NFTRewardsContract]);\n\n  // to fetch NFT Details\n  const fetchNFTDetails = async () => {\n    let balance = await NFTHelper.getNFTBalance(account, nftReadProvider);\n    setLoading(false);\n    for(let i=0; i<balance; i++){\n      let tokenId = await NFTHelper.getTokenOfOwnerByIndex(account, i, nftReadProvider)\n      let NFTObject = await NFTHelper.getTokenData(tokenId, nftReadProvider, NFTRewardsContract)\n      await setNFTObjects(prev => [...prev, NFTObject])\n    }\n  }\n\n  return (\n    <>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && NFTObjects.length == 0 &&\n        <ContainerInfo>\n          <DisplayNotice\n            title=\"No ROCKSTAR tokens are available in your account\"\n            theme=\"primary\"\n          />\n        </ContainerInfo>\n      }\n\n\n      {!loading && NFTObjects.length != 0 &&\n        <Items id=\"scrollstyle-secondary\">\n\n          {Object.keys(NFTObjects).map(index => {\n            if (NFTObjects[index].id) {\n              return (\n                <ViewNFTItem\n                  key={NFTObjects[index].id}\n                  NFTObject={NFTObjects[index]}\n                  nftReadProvider={nftReadProvider}\n                  nftWriteProvider={nftWriteProvider}\n                  controlAt={controlAt}\n                  setControlAt={setControlAt}\n                  setTokenId={setTokenId}\n                />\n              );\n            }\n\n          })}\n        </Items>\n      }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n// Export Default\nexport default MyNFTs;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport StackGrid, { transitions } from \"react-stack-grid\";\n\nimport Loader from 'react-loader-spinner'\nimport { Waypoint } from \"react-waypoint\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport NFTHelper from 'helpers/NFTHelper';\nimport { ethers } from \"ethers\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewNFTItem from \"components/ViewNFTItem\";\n\n\nconst { scaleDown } = transitions;\n\n// Create Header\nfunction AllNFTs({controlAt, setControlAt, setTokenId}) {\n  const { account, library } = useWeb3React();\n\n  const [nftReadProvider, setNftReadProvider] = React.useState(null);\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\n  const [NFTRewardsContract, setNFTRewardsContract] = React.useState(null);\n  const [NFTObjects, setNFTObjects] = React.useState([]);\n\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    if (!!(library && account)) {\n      const contractInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, library);\n      setNftReadProvider(contractInstance);\n      let signer = library.getSigner(account);\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer);\n      setNftWriteProvider(signerInstance);\n      const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\n      setNFTRewardsContract(NFTRewardsInstance);\n    }\n  }, [account, library]);\n\n  React.useEffect(() => {\n    if(nftReadProvider && NFTRewardsContract){\n      fetchNFTDetails();\n    }\n  }, [account, nftReadProvider, nftWriteProvider, NFTRewardsContract]);\n\n  // to fetch all minted NFT Details\n  const fetchNFTDetails = async () => {\n    let totalSupply = await NFTHelper.getTotalSupply(nftReadProvider);\n    setLoading(false);\n    for(let i=0; i<totalSupply; i++){\n      let tokenId = await NFTHelper.getTokenByIndex(i, nftReadProvider)\n      let NFTObject = await NFTHelper.getTokenData(tokenId, nftReadProvider, NFTRewardsContract)\n      await setNFTObjects(prev => [...prev, NFTObject])\n    }\n  }\n\n  return (\n    <Section align=\"center\">\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#674c9f\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && NFTObjects.length == 0 &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#674c9f\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && NFTObjects.length != 0 &&\n        <ItemH id=\"scrollstyle-secondary\">\n          {Object.keys(NFTObjects).map(index => {\n            if (NFTObjects) {\n              return (\n                <>\n                <ViewNFTItem\n                  key={NFTObjects[index].id}\n                  NFTObject={NFTObjects[index]}\n                  nftReadProvider={nftReadProvider}\n                  nftWriteProvider={nftWriteProvider}\n                  controlAt={controlAt}\n                  setControlAt={setControlAt}\n                  setTokenId={setTokenId}\n                />\n                </>\n              );\n            }\n          })}\n        </ItemH>\n      }\n    </Section>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n// Export Default\nexport default AllNFTs;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { FiLink } from 'react-icons/fi';\n\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nimport Loader from 'react-loader-spinner';\nimport { bigNumberify, parseUnits } from 'ethers/utils'\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport { addresses, abis } from \"@project/contracts\";\nimport NFTHelper from 'helpers/NFTHelper';\nconst ethers = require('ethers');\n\nconst ipfs = require('ipfs-api')()\n\nconst minStakeFees = 50;\n\n// Create Header\nfunction TransferNFT({tokenId}) {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\n  const [toAddress, setToAddress] = React.useState('');\n\n  const [processing, setProcessing] = React.useState(0);\n  const [processingInfo, setProcessingInfo] = React.useState('');\n\n\n  React.useEffect(() => {\n    if (!!(library && account)) {\n      let signer = library.getSigner(account);\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer);\n      setNftWriteProvider(signerInstance);\n    }\n  }, [account]);\n\n  const handleTransferNFT = async(e) => {\n    if(nftWriteProvider){\n    console.log(\"🚀 ~ file: TransferNFT.js ~ line 64 ~ handleTransferNFT ~ nftWriteProvider\", nftWriteProvider)\n    e.preventDefault();\n\n    if (isEmpty(toAddress)) {\n      setProcessing(3);\n      setProcessingInfo(\"Recipient address field is empty! Please retry!\");\n\n      return false;\n    }\n    setProcessing(1);\n    setProcessingInfo(\"Transferring NFT...\")\n    let signer = library.getSigner(account);\n    const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer)\n    var txPromise = nftWriteProvider['safeTransferFrom(address,address,uint256)'](account, toAddress, tokenId);\n    const tx = await txPromise;\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    setProcessingInfo(\"Waiting for Transfer tx to finish...\");\n    await library.waitForTransaction(tx.hash);\n    setProcessingInfo(\"Transfer successfull! \");\n    setProcessing(3);\n    }\n  }\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n    return false;\n  }\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span weight=\"200\">Transfer Your NFT!</Span>\n            </H2>\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Token #{tokenId}</Span>\n            </H2>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content padding=\"50px 0px 0px 0px\">\n          <FormSubmision\n            flex=\"1\"\n            direction=\"column\"\n            margin=\"0px\"\n            justify=\"center\"\n            size=\"1.1rem\"\n            onSubmit={handleTransferNFT}\n          >\n\n          <Item margin=\"-10px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n            <Input\n              required\n              placeholder=\"Recipient Address\"\n              maxlength = \"40\"\n              padding=\"12px\"\n              borderBottom=\"1px solid #000\"\n              weight=\"400\"\n              size=\"1.2em\"\n              bg=\"#fff\"\n              value={toAddress}\n              onChange={(e) => {setToAddress(e.target.value)}}\n            />\n            {toAddress.trim().length == 0 &&\n                <Span\n                  padding=\"4px 10px\"\n                  right=\"0px\"\n                  top=\"0px\"\n                  pos=\"absolute\"\n                  color=\"#fff\"\n                  bg=\"#000\"\n                  size=\"0.7rem\"\n                  z=\"1\"\n                >\n                  Recipient Address\n                </Span>\n              }\n          </Item>\n          <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n            <Button\n              bg='#674c9f'\n              color='#fff'\n              flex=\"1\"\n              radius=\"0px\"\n              padding=\"20px 10px\"\n              disabled={processing == 1 ? true : false}\n            >\n              {processing == 1 &&\n                <Loader\n                    type=\"Oval\"\n                    color=\"#fff\"\n                    height={24}\n                    width={24}\n                  />\n              }\n              {processing != 1 &&\n                <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Transfer\" />\n              }\n            </Button>\n          </Item>\n          </FormSubmision>\n        </Content>\n      </Section>\n\n      {(processing == 1 || processing == 3) &&\n        <Section>\n          <Content padding=\"0px 0px 0px 0px\">\n            <Item\n              color=\"#fff\"\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\n              padding=\"10px 15px\"\n              margin = \"15px 0px\"\n            >\n              <Span\n                color=\"#fff\"\n                textTransform=\"uppercase\"\n                spacing=\"0.1em\"\n                weight=\"400\"\n                size=\"1em\"\n              >\n                {processingInfo}\n              </Span>\n            </Item>\n\n          </Content>\n        </Section>\n      }\n    </>\n  );\n}\n\n// css styles\nconst Step = styled.div`\n  height: 12px;\n  width: 12px;\n  background: ${props => props.bg || \"#fff\"};\n  border: 4px solid ${props => props.activeBG || \"#000\"};\n  border-radius: 100%;\n\n  ${({ type }) => type == \"active\" && css`\n    background: ${props => props.activeBG || \"#ddd\"};\n    border: 4px solid #00000022;\n  `};\n`\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 10px 20px;\n  border-radius: 10px;\n  font-size: 15px;\n  // font-size: 11px;\n`\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #e20880;\n  // background: #674c9f;\n`\n\n\n// Export Default\nexport default TransferNFT;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Para, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { BsChevronExpand } from 'react-icons/bs';\n\nimport Loader from 'react-loader-spinner'\nimport { Waypoint } from \"react-waypoint\";\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport NFTHelper from 'helpers/NFTHelper';\nimport { ethers } from \"ethers\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewNFTItem from \"components/ViewNFTItem\";\nimport MyNFTs from \"components/MyNFTs\";\nimport AllNFTs from \"components/AllNFTs\";\nimport TransferNFT from \"components/TransferNFT\";\n\n// Create Header\nfunction NFT({ epnsReadProvider, epnsWriteProvide }) {\n  const { account, library } = useWeb3React();\n\n  const [tokenId, setTokenId] = React.useState(null);\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n\n  const [showAnswers, setShowAnswers] = React.useState([]);\n\n  const toggleShowAnswer = (id) => {\n    let newShowAnswers = [...showAnswers];\n    newShowAnswers[id] = !newShowAnswers[id];\n\n    setShowAnswers(newShowAnswers);\n  }\n\n  React.useEffect(() => {\n    userClickedAt(1);\n  }, [account]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"20px 20px 0px\">\n          <Item align=\"flex-start\" margin=\"0px 20px 0px 20px\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">$ROCKSTAR</Span><Span weight=\"200\"> of </Span><Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">EPNS</Span>\n            </H2>\n            <H3>Thank you <B>community</B> for all your support. Over the next year, we are excited to continue returning our gratitude!</H3>\n          </Item>\n\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 20px 0px 20px\">\n\n            {/* Question */}\n            <Item align=\"stretch\" margin=\"0px 0px 20px 0px\">\n              <QnAItem>\n                <Question\n                  onClick={() => {toggleShowAnswer(1)}}\n                  hover=\"#e20880\"\n                >\n                  <Span>\n                    Does $ROCKSTAR of EPNS NFTs carry something along with NFTs?\n                  </Span>\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\n                </Question>\n\n                {showAnswers[1] &&\n                  <Answer>\n                    <Span>\n                      Yes, Each <B>$ROCKSTAR</B> contains <B>2400 $PUSH</B> tokens that can be claimed instantly!!! <AMod href=\"https://medium.com/ethereum-push-notification-service/push-token-economics-d7f566c29b1a\" target=\"_blank\" title=\"Read more about $PUSH tokeneconomics\">Learn about $PUSH Token Economics.</AMod>\n                    </Span>\n                  </Answer>\n                }\n              </QnAItem>\n\n              <QnAItem>\n                <Question\n                  onClick={() => {toggleShowAnswer(2)}}\n                  hover=\"#e20880\"\n                >\n                  <Span>\n                    How to get $ROCKSTAR of EPNS?\n                  </Span>\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\n                </Question>\n\n                {showAnswers[2] &&\n                  <Answer>\n                    <Span>\n                      We’ll be distributing one NFT a week (every Monday) to one community member who does something to help us push the envelope forward. <AMod href=\"https://medium.com/ethereum-push-notification-service/kicking-off-the-epns-nft-community-drops-6a5c49808cf\" target=\"_blank\" title=\"Read how to get $ROCKSTAR of EPNS\">Here are some ways by which you can get one!</AMod>\n                    </Span>\n                  </Answer>\n                }\n              </QnAItem>\n\n            </Item>\n          </Item>\n        </Content>\n\n        <Content padding=\"0px 20px 20px\" bg=\"#eee\">\n          <Item align=\"flex-start\" margin=\"0px 20px 0px 20px\">\n            {/*}\n            <Controls>\n              <SubscribeButton index={0} active={controlAt == 0 ? 1 : 0} onClick={() => {userClickedAt(0)}} >\n                <ActionTitle >My NFTs</ActionTitle>\n              </SubscribeButton>\n              <SubscribeButton index={1} active={controlAt == 1 ? 1 : 0} onClick={() => {userClickedAt(1)}}>\n                <ActionTitle >All NFTs</ActionTitle>\n              </SubscribeButton>\n            </Controls>\n            */}\n\n            {controlAt == 0 &&\n              <MyNFTs\n                controlAt={controlAt}\n                setControlAt={setControlAt}\n                setTokenId={setTokenId}\n              />\n            }\n            {controlAt == 1 &&\n              <AllNFTs\n                controlAt={controlAt}\n                setControlAt={setControlAt}\n                setTokenId={setTokenId}\n              />\n            }\n            {controlAt == 2 && tokenId &&\n              <TransferNFT tokenId={tokenId}/>\n            }\n          </Item>\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: left;\n  // align-items: center;\n  justify-content: flex-end;\n  // justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n`\n\nconst ActionTitle = styled.span`\n  ${ props => props.hideit && css`\n    visibility: hidden;\n  `};\n`\n\nconst Question = styled(Button)`\n  align-items: stretch;\n  align-self: stretch;\n`\n\nconst Answer = styled(Item)`\n  align-items: stretch;\n  align-self: stretch;\n\n`\n\nconst QnAItem = styled(Item)`\n  align-items: stretch;\n  align-self: stretch;\n  flex: auto;\n  margin: 15px 0px;\n  border: 1px solid #fafafa;\n  border-radius: 10px;\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\n  overflow: hidden;\n\n  & ${Question} {\n    background: transparent;\n    justify-content: flex-start;\n    text-transform: uppercase;\n\n    & ${Span} {\n      font-weight: 400;\n      letter-spacing: 0.2em;\n      margin-left: 10px;\n      flex: 1;\n    }\n\n    &:hover {\n      & ${Span} {\n        color: #fff;\n      }\n    }\n  }\n\n  & ${Answer} {\n    border: 1px solid #e6e6e6;\n    border-top: 1px solid #e6e6e6;\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n    padding: 10px 15px;\n    align-items: flex-start;\n    background: #fff;\n\n    & ${Span} {\n      line-height: 1.5em;\n      margin: 10px;\n      color: #000 ;\n      font-size: 1.05em;\n    }\n  }\n`\n\nconst AMod = styled(A)`\n  color: #e20880;\n  font-weight: 500;\n`\n\n// Export Default\nexport default NFT;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Blockies from \"components/BlockiesIdenticon\";\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\nimport { Device } from 'assets/Device';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Skeleton from '@yisheng90/react-loading';\nimport { FiTwitter } from 'react-icons/fi';\nimport { GoVerified } from 'react-icons/go';\nimport { IoMdShareAlt } from 'react-icons/io';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from '@web3-react/core';\nimport { ethers } from \"ethers\";\nimport { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\n\nfunction ViewDelegateeItem({ delegateeObject, epnsToken, pushBalance, theme }) {\n  const { account, library } = useWeb3React();\n  const [ loading, setLoading ] = React.useState(true);\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\n  const [ isBalance, setIsBalance ] = React.useState(false);\n\n  React.useEffect(() => {\n    setLoading(false);\n    if(pushBalance !== 0){\n      setIsBalance(true)\n    }\n  }, [account, delegateeObject]);\n\n  const delegateAction = async (delegateeAddress) => {\n    setTxInProgress(true);\n    if (!isBalance) {\n      toast.dark(\"No PUSH to Delegate!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTxInProgress(false);\n      return;\n    }\n    let sendWithTxPromise;\n    sendWithTxPromise = epnsToken.delegate(delegateeAddress);\n    sendWithTxPromise\n      .then(async tx => {\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        try {\n          await library.waitForTransaction(tx.hash);\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000\n          });\n          setTxInProgress(false);\n        }\n        catch(e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n          setTxInProgress(false);\n        }\n      })\n      .catch(err => {\n        toast.dark('Transaction Cancelled!', {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        setTxInProgress(false);\n      })\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  // render\n  return (\n    <Item\n      key={delegateeObject.wallet}\n    >\n      <DelegateeItem\n        theme={theme}\n      >\n        <DelegateeImageOuter>\n          <DelegateeImageInner>\n            {loading &&\n              <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\n            }\n            {!loading && delegateeObject.pic &&\n              <Image\n                src={`./delegatees/${delegateeObject.pic}.jpg`}\n                srcSet={`./delegatees/${delegateeObject.pic}@2x.jpg 2x, ./delegatees/${delegateeObject.pic}@3x.jpg 3x`}\n                alt= {delegateeObject.name}\n              />\n            }\n            {!loading && !delegateeObject.pic &&\n              <Blockies seed={delegateeObject.wallet.toLowerCase()} opts={{seed: delegateeObject.wallet.toLowerCase(), size: 30, scale: 10}}/>\n            }\n          </DelegateeImageInner>\n\n          <ItemH\n            position=\"absolute\"\n            top=\"10px\"\n            left=\"10px\"\n            bg=\"#00000088\"\n            padding=\"6px 10px\"\n            radius=\"22px\"\n          >\n            <GoVerified size={12} color=\"#fff\"/>\n            <Span size=\"12px\" color=\"#fff\" padding=\"0px 0px 0px 10px\" spacing=\"0.2em\" weight=\"600\" textAlign=\"center\">{delegateeObject.votingPower.toLocaleString()}</Span>\n          </ItemH>\n        </DelegateeImageOuter>\n\n        <DelegateeProfile>\n          <Item>\n            <ItemH>\n              <Span weight=\"400\" textAlign=\"center\">{delegateeObject.name}</Span>\n              <Anchor\n                href={delegateeObject.url}\n                target=\"_blank\"\n                title={\"Visit Twitter profile of \" + delegateeObject.name}\n                bg=\"transparent\"\n                radius=\"4px\"\n                padding=\"4px\"\n                margin=\"0px 6px\"\n              >\n                <FiTwitter size={12} color=\"#35c5f3\" />\n              </Anchor>\n            </ItemH>\n\n            <DelegateeWallet size=\"0.5em\" color=\"#aaa\" spacing=\"0.2em\" weight=\"600\" textAlign=\"center\">{delegateeObject.wallet}</DelegateeWallet>\n          </Item>\n          <ItemBreak></ItemBreak>\n          <UnsubscribeButton >\n            <ActionTitle onClick={() => {delegateAction(delegateeObject.wallet)\n            }}\n              >Delegate</ActionTitle>\n          </UnsubscribeButton>\n\n          <Item\n            position=\"absolute\"\n            bottom=\"2px\"\n            left=\"-2px\"\n            padding=\"4px\"\n          >\n            <Anchor\n              href={delegateeObject.forum}\n              target=\"_blank\"\n              title={\"Visit forum post of \" + delegateeObject.name}\n              bg=\"transparent\"\n              radius=\"4px\"\n              padding=\"2px\"\n            >\n              <IoMdShareAlt size={16} color=\"#fff\" />\n            </Anchor>\n          </Item>\n        </DelegateeProfile>\n      </DelegateeItem>\n    </Item>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 0px;\n`\n\nconst DelegateeItem = styled.div`\n  max-width: 220px;\n  min-width: 220px;\n  flex: 1;\n  margin: 20px 20px;\n  padding: 4px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.theme == \"nominee\" ? \"#35c5f3\" : \"linear-gradient( 283deg, #34c5f2 0%, #e20880 45%, #35c5f3 100%)\"};\n  }\n`\n\nconst DelegateeImageOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`\n\nconst DelegateeImageInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-top-right-radius: 16px;\n  border-top-left-radius: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst DelegateeProfile = styled(ItemH)`\n  background: #fff;\n  border-bottom-right-radius: 16px;\n  border-bottom-left-radius: 90px;\n  padding: 20px;\n`\n\nconst DelegateeWallet = styled(Span)`\n  word-break: break-all;\n  padding-top: 4px;\n`\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  max-width: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst ActionTitle = styled.span`\n  ${ props => props.hideit && css`\n    visibility: hidden;\n  `};\n`\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n`\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #000;\n`\n\nconst DisabledDelegate = styled(ChannelActionButton)`\n  background: #ccc;\n`\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\nconst NFTTextStyle = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`\nconst NFTStatus = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n`\n\nconst NFTStatusTitle = styled(NFTTextStyle)`\n  background: #35c4f3;\n`\n\nconst NFTClaim = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n`\n\nconst NFTClaimTitle = styled(NFTTextStyle)`\n  background: #e20880;\n`\nconst Blocky = styled.div`\n  position: relative;\n  width: 100px;\n  height: 100px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n// Export Default\nexport default ViewDelegateeItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3,LI, Image, P, Span, Anchor, Button, FormSubmision, Input, TextField, UL} from 'components/SharedStyling';\nimport Loader from 'react-loader-spinner'\nimport { Waypoint } from \"react-waypoint\";\nimport { BsChevronExpand } from 'react-icons/bs';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport Blockies from \"components/BlockiesIdenticon\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewDelegateeItem from \"components/ViewDelegateeItem\";\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\nconst delegateesJSON = require(\"config/delegatees.json\")\nconst VOTING_TRESHOLD = 75000; //the treshold for delegates\n// Create Header\nfunction Delegate({ epnsReadProvider, epnsWriteProvide }) {\n  const { account, library } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  const [dashboardLoading, setDashboardLoading] = React.useState(true);\n  const [delegateesLoading, setDelegateesLoading] = React.useState(true);\n\n  const [txInProgress, setTxInProgress ] = React.useState(false);\n  const [controlAt, setControlAt] = React.useState(0);\n  const [user, setUser] = React.useState(null);\n  const [owner, setOwner] = React.useState(null);\n  const [delegateesObject, setDelegateesObject] = React.useState({});\n  const [pushDelegatees, setPushDelegatees] = React.useState([]);\n  const [pushNominees, setPushNominees] = React.useState([]);\n  const [epnsToken, setEpnsToken] = React.useState(null);\n  const [tokenBalance, setTokenBalance] = React.useState(null);\n  const [prettyTokenBalance, setPrettyTokenBalance] = React.useState(null);\n\n  const [showDelegateePrompt, setShowDelegateePrompt] = React.useState(false);\n  const [delegatee, setDelegatee] = React.useState(null);\n\n  const [showAnswers, setShowAnswers] = React.useState([]);\n  const [selfVotingPower, setSelfVotingPower ] = React.useState(null);\n  const [newDelegateeAddress, setNewDelegateeAddress ] = React.useState(\"0x\");\n  const [newDelegateeVotingPower, setNewDelegateeVotingPower ] = React.useState(null);\n\n  const toggleShowAnswer = (id) => {\n    let newShowAnswers = [...showAnswers];\n    newShowAnswers[id] = !newShowAnswers[id];\n    setShowAnswers(newShowAnswers);\n  }\n\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  React.useEffect(() => {\n    console.log(account)\n    if (!!(library && account)) {\n      let signer = library.getSigner(account);\n      const epnsTokenContract = new ethers.Contract(addresses.epnsToken, abis.epnsToken, signer);\n      setEpnsToken(epnsTokenContract);\n    }\n  }, [account,library]);\n\n  React.useEffect(() => {\n    if(epnsToken){\n      getMyInfo()\n    }\n  }, [epnsToken,account,library, prettyTokenBalance, tokenBalance]);\n\n  React.useEffect(() => {\n    setDashboardLoading(false);\n  }, [account]);\n\n  React.useEffect(() => {\n    if(!epnsToken) return;\n    const delegateesList = Object.values(delegateesJSON);\n    // write helper function to sort by voting power\n    const votingPowerSorter = (a, b) => {\n      return  b.votingPower - a.votingPower\n    };\n\n\n    // go through all the delegates json and get their voting power\n    const allDelegateesPromise = delegateesList.map(async (oneDelegate:any) => {\n      const { wallet } = oneDelegate;\n      const votingPower = await EPNSCoreHelper.getVotingPower(wallet, epnsToken);\n      return {...oneDelegate, votingPower: Number(votingPower)};\n    });\n\n\n    Promise.all(allDelegateesPromise).then((allDelegatees) => {\n      // filter for delegates (i.e) Those who have above 75000 power,\n      // use the parameter votingPowerSimulate parameter to simulate voting power above the treshold\n      const delegateesAbove75k = allDelegatees.filter(({votingPower, votingPowerSimulate}) => {\n        return (votingPower >=  VOTING_TRESHOLD)\n      });\n\n      // sort by voting power\n      const sortedDelegatees = [...delegateesAbove75k].sort(votingPowerSorter);\n      setPushDelegatees(sortedDelegatees);\n\n      // calculate for  the nominees (i.e peoplw who have voting power less than 75k)\n      const delegateesBelow75k = allDelegatees.filter(({votingPower}) => {\n        return votingPower <  VOTING_TRESHOLD\n      });\n\n      const sortedNominees = [...delegateesBelow75k].sort(votingPowerSorter);\n\n      // sort by voting power\n      setPushNominees(sortedNominees);\n\n      setDelegateesLoading(false);\n    })\n    setDelegateesObject(delegateesJSON)\n    // in order to\n  }, [epnsToken])\n\n  const isValidAddress = (address) => {\n    if(ethers.utils.isAddress(address)){\n      return true\n    }\n    else{\n      toast.dark(\"Invalid address!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return false;\n    }\n  }\n\n  const getVotingPower = async (address) => {\n    try{\n      const votingPower = await EPNSCoreHelper.getVotingPower(address, epnsToken, true)\n      setNewDelegateeVotingPower(votingPower)\n    }\n    catch(err){\n    console.log(\"🚀 ~ file: Delegate.tsx ~ line 86 ~ getVotingPower ~ err\", err)\n    }\n  }\n\n  const getMyInfo = async () => {\n    let bal = await epnsToken.balanceOf(account)\n    let decimals =  await epnsToken.decimals()\n    let tokenBalance = await Number(bal/Math.pow(10, decimals))\n    let newBal = tokenBalance.toString();\n    let delegatee = await epnsToken.delegates(account)\n    let votes = await epnsToken.getCurrentVotes(account)\n    let votingPower = await Number(votes/Math.pow(10, decimals))\n    let prettyVotingPower = votingPower.toLocaleString();\n    setTokenBalance(tokenBalance)\n    setPrettyTokenBalance(newBal)\n    setDelegatee(delegatee)\n    setSelfVotingPower(prettyVotingPower)\n  }\n\n  const delegateAction = async (newDelegatee) => {\n    setTxInProgress(true);\n\n    const isAddress = await isValidAddress(newDelegatee)\n    console.log(isAddress)\n    if(!isAddress){\n      setTxInProgress(false);\n      return;\n    }\n    if (tokenBalance == 0) {\n      toast.dark(\"No PUSH to Delegate!\", {\n        position: \"bottom-right\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      setTxInProgress(false);\n      return;\n    }\n\n    let sendWithTxPromise;\n    sendWithTxPromise = epnsToken.delegate(newDelegatee);\n    sendWithTxPromise\n      .then(async tx => {\n\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        try {\n          await library.waitForTransaction(tx.hash);\n\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n          setShowDelegateePrompt(false);\n        }\n        catch(e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n        }\n      })\n      .catch(err => {\n        toast.dark('Transaction Cancelled!', {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        setTxInProgress(false);\n      })\n  }\n\n\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  return (\n    <Section>\n      <Content theme=\"#f3f3f3\" padding=\"20px 20px 30px 20px\">\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 15px 15px 15px\">\n          {(dashboardLoading || !prettyTokenBalance || !selfVotingPower) &&\n            <Item padding=\"20px\">\n              <Loader type=\"Oval\" color=\"#e20880\" height={40} width={40} />\n            </Item>\n          }\n\n          {!dashboardLoading && prettyTokenBalance && selfVotingPower &&\n            <Item margin=\"10px 0px 0px 0px\" self=\"stretch\" items=\"stretch\">\n              <StatsCard\n                align=\"stretch\"\n                justify=\"flex-start\"\n                self=\"stretch\"\n                bg=\"#fff\"\n                op=\"1\"\n              >\n                <StatsHeading bg=\"#e20880\">Governance Dashboard</StatsHeading>\n                <StatsContent>\n                  <ItemH align=\"stretch\" self=\"stretch\">\n                    <Item align=\"center\" self=\"center\" flex=\"initial\" padding=\"10px\">\n                      <Blocky>\n                        <BlockyInner>\n                           <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 10, scale: 10}}/>\n                        </BlockyInner>\n                      </Blocky>\n                      <Wallet>\n                      {!ensFetched &&\n                        <Loader\n                           type=\"Oval\"\n                           color=\"#FFF\"\n                           height={16}\n                           width={16}\n                        />\n                      }\n                      {ensFetched && ens &&\n                        <>{ens}</>\n                      }\n                      {ensFetched && !ens &&\n                        <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n                      }\n                      </Wallet>\n                    </Item>\n\n                    <Item align=\"flex-start\" self=\"stretch\" padding=\"10px\" size=\"16px\">\n                      <ItemH flex=\"initial\" padding=\"5px\">\n                        <Span weight=\"500\" padding=\"0px 8px 0px 0px\">$PUSH Balance: </Span>\n                        <CurvedSpan bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"4px 8px\" textTransform=\"uppercase\">{prettyTokenBalance}</CurvedSpan>\n                      </ItemH>\n\n                      <ItemH flex=\"initial\" padding=\"5px\">\n                        <Span weight=\"500\"  padding=\"0px 8px 0px 0px\">Voting Power: </Span>\n                        <CurvedSpan bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"4px 8px\" textTransform=\"uppercase\">{selfVotingPower}</CurvedSpan>\n                      </ItemH>\n\n                      {delegatee !== \"0x0000000000000000000000000000000000000000\" &&\n                        <ItemH flex=\"initial\" padding=\"5px\">\n                          <Span padding=\"0px 8px 0px 0px\">Delegated To: </Span>\n                          <Span weight=\"600\">{delegatee}</Span>\n                        </ItemH>\n                      }\n                    </Item>\n                  </ItemH>\n\n                  {showDelegateePrompt &&\n                    <Item\n                      bg=\"#eeeeeeee\"\n                      position=\"absolute\"\n                      top=\"0\"\n                      bottom=\"0\"\n                      left=\"0\"\n                      right=\"0\"\n                    >\n                      <Item align=\"stretch\" self=\"stretch\" margin=\"0px 20px 40px 20px\">\n                        <Span color=\"#000\" weight=\"400\">Enter delegatee address</Span><br></br>\n                        <Input\n                          placeholder=\"Enter delegatee address\"\n                          radius=\"4px\"\n                          padding=\"12px\"\n                          self=\"stretch\"\n                          bg=\"#fff\"\n                          value={newDelegateeAddress}\n                          onChange={async(e) => {\n                            setNewDelegateeAddress(e.target.value)\n                            setNewDelegateeVotingPower(null)\n                          }}\n                        />\n                        {newDelegateeVotingPower && newDelegateeAddress &&\n                          <StatsInnerTitle>Voting Power: {newDelegateeVotingPower}</StatsInnerTitle>\n                        }\n                      </Item>\n\n                    </Item>\n                  }\n\n                  <Item self=\"stretch\" align=\"flex-end\">\n                    <ItemH>\n\n                      <ButtonAlt\n                        bg={txInProgress ? \"#999\" : \"#e20880\"}\n                        disabled={txInProgress ? true : false}\n                        onClick={() => {\n                          if (showDelegateePrompt) {\n                            delegateAction(newDelegateeAddress)\n                          }\n                          else {\n                            setShowDelegateePrompt(true)\n                          }\n                        }}\n                        >\n                          <Span color=\"#fff\" weight=\"400\">Delegate to Others</Span>\n                      </ButtonAlt>\n\n                      {!showDelegateePrompt &&\n                        <ButtonAlt\n                          bg={txInProgress ? \"#999\" : \"#51CAF3\"}\n                          disabled={txInProgress ? true : false}\n                          onClick={() => { delegateAction(account)}}\n                        >\n                            <Span color=\"#fff\" weight=\"400\">Delegate to Myself</Span>\n                        </ButtonAlt>\n                      }\n\n                      <ButtonAlt\n                        bg={\"#000\"}\n                        onClick={\n                          () => {\n                            if (showDelegateePrompt) {\n                              getVotingPower(newDelegateeAddress)\n                            }\n                            else {\n                              setShowDelegateePrompt(true)\n                            }\n                          }\n                        }\n                      >\n                        <Span color=\"#fff\" weight=\"400\">Query Voting Power</Span>\n                      </ButtonAlt>\n\n                      {showDelegateePrompt &&\n                        <ButtonAlt\n                          bg=\"#000\"\n                          onClick={() => { setShowDelegateePrompt(false) }}\n                        >\n                            <Span color=\"#fff\" weight=\"400\">Close</Span>\n                        </ButtonAlt>\n                      }\n                    </ItemH>\n\n                  </Item>\n                </StatsContent>\n                <StatsPreview color=\"#e20880\">MY INFO</StatsPreview>\n              </StatsCard>\n            </Item>\n          }\n        </Item>\n\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"15px 15px 0px 15px\">\n          <StatsCard\n            align=\"stretch\"\n            justify=\"flex-start\"\n            self=\"stretch\"\n            bg=\"#fff\"\n          >\n            <StatsHeading bg=\"#35c5f3\">Meet the PUSH Nominees</StatsHeading>\n            <NomineeContainer>\n              {delegateesLoading ? (\n                  <ContainerInfo>\n                    <Loader\n                      type=\"Oval\"\n                      color=\"#35c5f3\"\n                      height={40}\n                      width={40}\n                    />\n                  </ContainerInfo>\n                ) : (\n                  <AbsoluteWrapper>\n                    {\n                      pushNominees.map((onePushNominee) => {\n                        return (\n                          <ViewDelegateeItem\n                            key={onePushNominee.wallet}\n                            delegateeObject={onePushNominee}\n                            epnsToken={epnsToken}\n                            pushBalance={tokenBalance}\n                            theme=\"nominee\"\n                          />\n                        )\n                      })\n                    }\n                  </AbsoluteWrapper>\n                )\n              }\n            </NomineeContainer>\n          </StatsCard>\n        </Item>\n      </Content>\n\n      <Content padding=\"20px 20px 0px\">\n        <Item align=\"flex-start\" margin=\"0px 15px 0px 15px\">\n          <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n            <Span weight=\"200\">PUSH </Span><Span bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">DELEGATEES</Span>\n          </H2>\n          <H3>Let's start <B>governing!!</B> </H3>\n        </Item>\n\n        <Item>\n          {dashboardLoading &&\n            <ContainerInfo>\n              <Loader\n                type=\"Oval\"\n                color=\"#35c5f3\"\n                height={40}\n                width={40}\n              />\n            </ContainerInfo>\n          }\n\n          {!dashboardLoading && controlAt == 0 &&\n            <ItemH\n              padding=\"0px 20px 20px 20px\"\n              self=\"stretch\"\n            >\n              {pushDelegatees.length == 0  &&\n                <Item align=\"flex-start\" self=\"stretch\">\n                  <Span padding=\"10px 10px\" margin=\"10px 0px\" bg=\"#666\" color=\"#fff\" weight=\"600\">🤷 Awkward!!</Span>\n                  <Span padding=\"10px 10px\" margin=\"10px 0px\" bg=\"#666\" color=\"#fff\" weight=\"600\">Show some 💕 to Nominees to kickstart Governance!</Span>\n                </Item>\n              }\n              {pushDelegatees.length > 0  &&\n                pushDelegatees.map((oneDelegatee) => {\n                  return (\n                    <>\n                    <ViewDelegateeItem\n                      key={oneDelegatee.wallet}\n                      delegateeObject={oneDelegatee}\n                      epnsToken={epnsToken}\n                      pushBalance={tokenBalance}\n                      theme=\"delegate\"\n                    />\n                    </>\n                  );\n                })\n              }\n            </ItemH>\n          }\n        </Item>\n      </Content>\n\n      {/* FAQs */}\n      <Content padding=\"20px 20px 35px\" theme=\"#fff\">\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"-10px 20px 0px 20px\">\n\n          {/* Question */}\n          <Item align=\"stretch\" margin=\"0px 0px 0px 0px\">\n            <QnAItem>\n              <Question\n                onClick={() => {toggleShowAnswer(0)}}\n                hover=\"#e20880\"\n              >\n                <Span>\n                  What are PUSH Delegatees?\n                </Span>\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\n              </Question>\n\n              {showAnswers[0] &&\n                <Answer>\n                  <Span>\n                    Active community members who have at least <b>75,000 $PUSH</b> delegated to them.\n                    They will be able to create proposals on Snapshot that are approved on the <AMod href=\"https://gov.epns.io/\"> forum </AMod>\n                  </Span>\n                </Answer>\n              }\n            </QnAItem>\n\n            <QnAItem>\n              <Question\n                onClick={() => {toggleShowAnswer(1)}}\n                hover=\"#e20880\"\n              >\n                <Span>\n                  What are PUSH Nominees\n                </Span>\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\n              </Question>\n\n              {showAnswers[1] &&\n                <Answer>\n                  <Span>\n                  Active community members who can be delegated $PUSH to vote for proposals Snapshot. If you wish to be PUSH Nominee, submit your nomination\n                  <AMod href=\"https://gov.epns.io/t/epns-push-delegatee-nominations/21\"> here. </AMod>\n                   Once they get at least <b>75,000 $PUSH </b> delegated to them, they become a PUSH Delegatee.\n                  </Span>\n                </Answer>\n              }\n            </QnAItem>\n\n            <QnAItem>\n              <Question\n                onClick={() => {toggleShowAnswer(2)}}\n                hover=\"#e20880\"\n              >\n                <Span>\n                  How can I become a PUSH Nominee?\n                </Span>\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\n              </Question>\n\n              {showAnswers[2] &&\n                <Answer>\n                  <Span>Step-by-step process:</Span>\n                  <UL>\n                    <LI>\n                      <Span>Sign up on:- <AMod href=\"https://gov.epns.io/\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">EPNS Governance Portal</AMod></Span>\n                    </LI>\n                    <LI>\n                      <Span>Go to:- <AMod href=\"https://gov.epns.io/t/epns-push-delegatee-nominations/21\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">https://gov.epns.io/t/epns-push-delegatee-nominations/21</AMod></Span>\n                    </LI>\n                    <LI>\n                      <Span>Submit your nomination by replying to the above post in the PROPOSED TEMPLATE.</Span>\n                    </LI>\n                  </UL>\n                  <Span>\n                    Now, once your nomination receives minimum of 10 likes,\n                    We will be adding your wallet address on our Governance Front end within 5-7 days.\n                    And later community members can start delegating votes to you.\n                  </Span>\n                </Answer>\n              }\n            </QnAItem>\n\n            <QnAItem>\n              <Question\n                onClick={() => {toggleShowAnswer(3)}}\n                hover=\"#e20880\"\n              >\n                <Span>\n                  What if I don't wish to be a PUSH Nominee?\n                </Span>\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\n              </Question>\n\n              {showAnswers[3] &&\n                <Answer>\n                  <Span>\n                    No problem! You can show support to your favourite PUSH Nominees by liking their nominations <AMod href=\"https://gov.epns.io/t/epns-push-delegatee-nominations/21\">here</AMod>.\n                  </Span>\n                </Answer>\n              }\n            </QnAItem>\n\n            <QnAItem>\n              <Question\n                onClick={() => {toggleShowAnswer(4)}}\n                hover=\"#e20880\"\n              >\n                <Span>\n                  Where should I start?\n                </Span>\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\n              </Question>\n\n              {showAnswers[4] &&\n                <Answer>\n                  <Span>Visit <AMod href=\"https://gov.epns.io/\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">EPNS Governance Portal</AMod> and introduce yoursef on the platform in the suggested format.</Span>\n\n                </Answer>\n              }\n            </QnAItem>\n\n            <QnAItem>\n              <Question\n                onClick={() => {toggleShowAnswer(5)}}\n                hover=\"#e20880\"\n              >\n                <Span>\n                  What happens to the delegated voting power when I sell my PUSH tokens?\n                </Span>\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\n              </Question>\n\n              {showAnswers[5] &&\n                <Answer>\n                  <Span>If you delegate your voting power to someone/yourself and later you sell your\n                    PUSH tokens, then the voting power of those tokens gets revoked. Now the new owner gets to decide whom to delegate to. </Span>\n\n                </Answer>\n              }\n            </QnAItem>\n\n            <QnAItem>\n              <Question\n                onClick={() => {toggleShowAnswer(6)}}\n                hover=\"#e20880\"\n              >\n                <Span>\n                  How can I cast my vote?\n                </Span>\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\n              </Question>\n\n              {showAnswers[6] &&\n                <Answer>\n                  <Span>Please visit <AMod href=\"https://snapshot.org/#/epns.eth\" target=\"_blank\" title=\"EPNS Governance - Snapshot Portal\">EPNS Governance - Snapshot Portal</AMod> to view the ongoing on-chain proposals and cast your vote.</Span>\n                </Answer>\n              }\n            </QnAItem>\n\n            <QnAItem>\n              <Question\n                onClick={() => {toggleShowAnswer(7)}}\n                hover=\"#e20880\"\n              >\n                <Span>\n                  How can I keep up with EPNS Governance?\n                </Span>\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\n              </Question>\n\n              {showAnswers[7] &&\n                <Answer>\n                  <Span>Join our <AMod href=\"https://t.me/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">Telegram</AMod>, follow us on <AMod href=\"https://twitter.com/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">Twitter</AMod>, and sign up for our 5 minute <AMod href=\"https://epns.substack.com/\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">weekly product updates</AMod>.</Span>\n                </Answer>\n              }\n            </QnAItem>\n          </Item>\n        </Item>\n      </Content>\n    </Section>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\nconst Question = styled(Button)`\n  align-items: stretch;\n  align-self: stretch;\n  background: #fff;\n`\nconst Answer = styled(Item)`\n  align-items: stretch;\n  align-self: stretch;\n`\n\nconst QnAItem = styled(Item)`\n  align-items: stretch;\n  align-self: stretch;\n  flex: auto;\n  margin: 15px 0px;\n  border: 1px solid #fafafa;\n  border-radius: 10px;\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\n  overflow: hidden;\n\n  & ${Question} {\n    background: transparent;\n    justify-content: flex-start;\n    text-transform: uppercase;\n\n    & ${Span} {\n      font-weight: 400;\n      letter-spacing: 0.2em;\n      margin-left: 10px;\n      flex: 1;\n    }\n\n    &:hover {\n      & ${Span} {\n        color: #fff;\n      }\n    }\n  }\n\n  & ${Answer} {\n    border: 1px solid #e6e6e6;\n    border-top: 1px solid #e6e6e6;\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n    padding: 10px 15px;\n    align-items: flex-start;\n    background: #fff;\n\n    & ${Span} {\n      line-height: 1.5em;\n      margin: 10px;\n      color: #000 ;\n      font-size: 1.05em;\n    }\n  }\n`\n\nconst AMod = styled(A)`\n  color: #e20880;\n  font-weight: 500;\n`\n\nconst EpicButton = styled(A)`\n  padding: 15px 15px;\n  margin-left: 25px;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 8px;\n  background: linear-gradient(273deg, #674c9f 0%, rgba(226,8,128,1) 100%);\n  `\n  const ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 800;\n  // font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n  const GradientButton = styled(ChannelActionButton)`\n  // background: #674c9f;\n  background: linear-gradient(273deg, #674c9f 0%, rgba(226,8,128,1) 100%);\n  `\n  const ActionTitle = styled.span`\n  ${ props => props.hideit && css`\n    visibility: hidden;\n  `};\n`\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\nconst StatsCard = styled(Item)`\n  overflow: hidden;\n  min-width: 180px;\n\n  border-radius: 12px;\n  border: 1px solid rgb(225, 225, 225);\n\n  &:hover {\n    opacity: ${props => props.op ? \"0.9\" : props.op}\n  }\n`;\n\nconst CenterHeading = styled.h2`\n  text-align: center;\n`;\n\nconst PoolContainer = styled.div`\n  display: flex;\n`;\n\nconst StatsHeading = styled(Item)`\n  flex: 0;\n  align-self: stretch;\n  color: #fff;\n  top: 0px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n  font-size: 15px;\n  text-align: center;\n  padding: 10px 5px;\n  right: 0;\n  left: 0;\n`\n\nconst NomineeContainer = styled.div`\n  padding: 0px 20px 0px 20px;\n  position: relative;\n  height: 420px;\n  overflow-y: hidden;\n  overflow-x: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* width */\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n  }\n`;\n\nconst StatsContent = styled(Item)`\n  padding: 20px 20px;\n`\n\nconst AbsoluteWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: max-content;\n  overflow: scroll;\n  display: flex;\n`\n\nconst StatsPreview = styled(Span)`\n  position: absolute;\n  bottom: 5px;\n  right: 10px;\n  font-weight: 600;\n  font-size: 12px;\n  opacity: 0.25;\n  letter-spacing:0.1em;\n  text-transform: uppercase;\n  color: ${props => props.color || '#000'};\n  z-index: -1;\n`\n\nconst StatsInnerTitle = styled.span`\n  // font-weight: bold;\n  font-size: 15px;\n  letter-spacing: 0.1em;\n  align-items: left;\n  margin-top: 10px;\n`;\n\n\nconst StatsInnerSub = styled.span`\n  font-size: 12px;\n  color: #999;\n  font-weight: 600;\n  align-self: flex-end;\n`;\n\nconst ButtonAlt = styled(Button)`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      &:hover {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n      &:active {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n    `}\n`;\n\nconst CurvedSpan = styled(Span)`\n  font-size: 14px;\n`;\n\n// css styles\nconst Blocky = styled.div`\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 10px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: none;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: #333;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Delegate;\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { bigNumber, bigNumberify } from 'ethers/utils'\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n    ADD_CHANNEL_ANY: \"AddChannelAny\",\n    ADD_CHANNEL_SELF: \"AddChannelSelf\",\n    UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n    UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n    SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n    SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n    UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n    UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n}\n\nexport default class ChannelsDataStore {\n    static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n    state = {\n      channelsCount: -1,\n      channelsMeta: {},\n      channelsJson: {},\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n    }\n\n    // init\n    init = (account, epnsReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetChannelsListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.initChannelsListenersAsync();\n\n      // next get store channels count\n      this.getChannelsCountAsync();\n    }\n\n    // RESET LISTENERS\n    resetChannelsListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\n      }\n    }\n\n    // init LISTENERS\n    initChannelsListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForAddChannelAnyAsync();\n      await this.listenForAddChannelSelfAsync();\n\n      await this.listenForUpdateChannelAnyAsync();\n      await this.listenForUpdateChannelSelfAsync();\n\n      await this.listenForSubscribeAnyAsync();\n      await this.listenForSubscribeSelfAsync();\n      await this.listenForUnsubscribeAnyAsync();\n      await this.listenForUnsubscribeSelfAsync();\n    }\n\n    // 1. Add Any Channel Listeners\n    listenForAddChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        await this.incrementChannelsCountAsync(1);\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 2. Add Self Channel Listener\n    listenForAddChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        // Nothing to do, just do callback\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 3. Update Any Channel Listener\n    listenForUpdateChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 4. Update Self Channel Listener\n    listenForUpdateChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 5. Subscriber Any\n    listenForSubscribeAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        if (this.state.channelsMeta[channel]) {\n          const channelID = this.state.channelsMeta[channel];\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n          count = count + 1;\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 6. Subscriber Self\n    listenForSubscribeSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 7. Unsubscribe Any\n    listenForUnsubscribeAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        if (this.state.channelsMeta[channel]) {\n          const channelID = this.state.channelsMeta[channel];\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n          count = count - 1;\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 8. Unsubscribe Self\n    listenForUnsubscribeSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // CHANNELS COUNT\n    getChannelsCountAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfChannels(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.channelsCount = response;\n\n              if (enableLogs) console.log(\"getChannelsCountAsync() --> %o\", response);\n              resolve(this.state.channelsCount)\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n        else {\n          resolve(this.state.channelsCount);\n        }\n      });\n    }\n\n    incrementChannelsCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getChannelsCountAsync()\n          .then(response => {\n            this.state.channelsCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.channelsCount);\n            resolve(this.state.channelsCount)\n          })\n          .catch(err => { console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err); reject(err); });\n      });\n\n    }\n\n    // CHANNELS META FUNCTIONS\n    // To get channels meta\n    getChannelsMetaAsync = async (atIndex, numChannels) => {\n      return new Promise (async (resolve, reject) => {\n        // get total number of channels\n        const channelsCount = await this.getChannelsCountAsync();\n\n        if (atIndex == -1) {\n          atIndex = channelsCount - 1;\n        }\n\n        if (numChannels == -1) {\n          numChannels = channelsCount;\n        }\n\n        // Get channels\n        let channelsMeta = [];\n        let channelsDummy = [];\n\n        // prefil and then refil\n        let count = 0;\n        for (let i = 0; i < numChannels; i++) {\n          const assignedChannelID = atIndex - i;\n          channelsDummy[count] = assignedChannelID;\n          count = count + 1;\n        }\n\n        const promises = channelsDummy.map(async (channelID) => {\n          // Match the cache\n          await this.getChannelMetaAsync(channelID)\n            .then(response => {\n              const mappings = { ...response };\n              mappings.id = channelID;\n\n              channelsMeta = [mappings, ...channelsMeta];\n            })\n            .catch(err => console.log(\"!!!Error (but skipping), getChannelMetaAsync() --> %o\", err))\n        });\n\n        // wait until all promises are resolved\n        await Promise.all(promises);\n\n        channelsMeta.sort((a, b) => {\n          if (a.id < b.id) return -1;\n          if (a.id > b.id) return 1;\n          return 0;\n        });\n\n        // return channels meta\n        console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", atIndex - numChannels + 1, atIndex, channelsMeta);\n        resolve(channelsMeta);\n      });\n    }\n\n    // To get a single channel meta via id\n    getChannelMetaAsync = async (channelID) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelID]) {\n          console.log(\"getChannelMetaAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          let channelAddress;\n\n          await EPNSCoreHelper.getChannelAddressFromID(channelID, this.state.epnsReadProvider)\n            .then(async response => {\n              channelAddress = response;\n              await this.getChannelMetaViaAddressAsync(channelAddress)\n                .then(response => {\n                  // update the channel cache before resolving\n                  this.state.channelsMeta[channelID] = response;\n                  this.state.channelsMeta[channelAddress] = channelID;\n\n                  // resolve\n                  console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                  resolve(response);\n                })\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // To get a single channel meta via address\n    getChannelMetaViaAddressAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelAddress]) {\n          const channelID = this.state.channelsMeta[channelAddress];\n\n          console.log(\"getChannelMetaViaAddressAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          // Can't cache this :(, no way to know channel id\n          await EPNSCoreHelper.getChannelInfo(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // resolve\n              console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaViaAddressAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // CHANNELS INFO FUNCTIONS\n    // To get a single channel meta via id\n    getChannelJsonAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsJson[channelAddress]) {\n          console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n          resolve(this.state.channelsJson[channelAddress]);\n        }\n        else {\n          await EPNSCoreHelper.getChannelJsonFromChannelAddress(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // First set the cache\n              this.state.channelsJson[channelAddress] = response;\n\n              // resolve\n              console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n}\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { bigNumber } from 'ethers/utils'\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n    }\n\n    // init\n    init = (account, epnsReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(null, this.state.account);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      }\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      }\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.publicKeyRegistered = true;\n      }\n\n      contract.once(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              reject(err);\n          });\n        }\n      });\n    }\n\n}\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, A, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport Loader from 'react-loader-spinner'\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\n\nimport Airdrop from \"segments/Airdrop\";\nimport YieldFarming from 'segments/YieldFarming';\nimport NFT from 'segments/NFT';\nimport PushGovernance from 'segments/PushGovernance';\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n\n// Create Header\nfunction Home({ setBadgeCount, bellPressed }) {\n  ReactGA.pageview('/home');\n\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null);\n  const [epnsWriteProvider, setEpnsWriteProvider] = React.useState(null);\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n\n\n  // React.useEffect(() => {\n  //   const contractInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, library);\n  //   setEpnsReadProvider(contractInstance);\n\n  //   if (!!(library && account)) {\n  //     let signer = library.getSigner(account);\n  //     const signerInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n  //     setEpnsWriteProvider(signerInstance);\n  //   }\n\n  // }, [account]);\n\n  // React.useEffect(() => {\n  //   // Reset when account refreshes\n  //   setChannelAdmin(false);\n  //   setAdminStatusLoaded(false);\n  //   userClickedAt(0);\n  //   setChannelJson([]);\n\n  //   // EPNS Read Provider Set\n  //   if (epnsReadProvider != null) {\n  //     // Instantiate Data Stores\n  //     UsersDataStore.instance.init(account, epnsReadProvider);\n  //     ChannelsDataStore.instance.init(account, epnsReadProvider);\n\n  //     checkUserForChannelRights();\n  //   }\n\n  // }, [epnsReadProvider]);\n\n\n  // // Revert to Feedbox on bell pressed\n  // React.useEffect(() => {\n  //   setControlAt(4);\n  // }, [bellPressed]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  //Start Listening...\n  const listenerForChannelRights = async () => {\n    ChannelsDataStore.instance.addCallbacks(\n      ChannelEvents.ADD_CHANNEL_SELF,\n      \"FromCreateChannel\",\n      () => {\n        checkUserForChannelRights();\n      }\n    );\n  }\n\n  // Check if a user is a channel or not\n  const checkUserForChannelRights = async () => {\n    // Check if account is admin or not and handle accordingly\n    EPNSCoreHelper.getChannelJsonFromUserAddress(account, epnsReadProvider)\n      .then(response => {\n        console.log(response);\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch(e => {\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      });\n\n    // Start listening\n    listenerForChannelRights();\n  }\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0)\n          }}\n        >\n          <ControlImage src=\"./svg/yield.svg\" active={controlAt == 0 ? 1 : 0} />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Yield Farming</ControlText>\n        </ControlButton>\n\n        {/*\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1)\n          }}\n        >\n          <ControlImage src=\"./svg/gratitude.svg\" active={controlAt == 1 ? 1 : 0} />\n          <ControlText active={controlAt == 1 ? 1 : 0}>Gratitude Drop</ControlText>\n        </ControlButton>\n        */}\n\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1)\n          }}\n        >\n          <ControlImage src=\"./svg/delegate.svg\" active={controlAt == 1 ? 1 : 0} />\n          <ControlText active={controlAt == 1 ? 1 : 0}>Push Governance</ControlText>\n        </ControlButton>\n\n        <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#674c9f\"\n          onClick={() => {\n            userClickedAt(2)\n          }}\n        >\n          <ControlImage src=\"./svg/rockstars.svg\" active={controlAt == 2 ? 1 : 0} />\n          <ControlText active={controlAt == 2 ? 1 : 0}>Rockstars of EPNS</ControlText>\n        </ControlButton>\n\n        <ControlButton index={4} active={controlAt == 4 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            window.open(\"https://app.epns.io\", \"_blank\")\n          }}\n        >\n          <ControlImage src=\"./svg/epnslogo.svg\" active={controlAt == 4 ? 1 : 0} />\n          <ControlText active={controlAt == 4 ? 1 : 0}>#PushNotifs  </ControlText>\n        </ControlButton>\n\n      </Controls>\n      <Interface>\n        <Section>\n          {controlAt == 0 &&\n            <YieldFarming />\n          }\n          {/*{controlAt == 1 &&\n            <Airdrop />\n          }*/}\n          {controlAt == 1 &&\n            <PushGovernance\n              epnsReadProvider={epnsReadProvider}\n              epnsWriteProvide={epnsWriteProvider}\n            />\n          }\n          {controlAt == 2 &&\n            <NFT\n              epnsReadProvider={epnsReadProvider}\n              epnsWriteProvide={epnsWriteProvider}\n            />\n          }\n          {controlAt == 3 &&\n            <></>\n          }\n        </Section>\n\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\n\nconst ControlButton = styled.div`\n  flex: 1 1 10%;\n  height: 120px;\n  min-width: 100px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  border-bottom: 10px solid rgb(180,180,180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(2) translate(-20px, 0px);\n    opacity: 0.4;\n  `};\n`\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(1.3) translate(-10px, 0px);\n  `};\n`\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`\n\nconst ControlChannelImage = styled.img`\n    width: 20%;\n    margin-bottom: 10px;\n    transition: transform .2s ease-out;\n    ${ props => props.active && css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n  transition: transform .2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${ props => props.active && css`\n    transform: scale(1.1) translate(0px, -20px);\n  `};\n\n`\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 15px;\n  overflow: hidden;\n`\n\n// Export Default\nexport default Home;\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {Section, Content, Item, ItemH, Button} from 'components/SharedStyling';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header({ badgeCount, bellPressedCB }) {\n  const context = useWeb3React<Web3Provider>()\n\n  const { active, error, account, chainId } = useWeb3React();\n  const { deactivate } = context\n\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to Mainnet\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  const bellPressed = () => {\n    setShowLoginControls(!showLoginControls);\n  }\n\n  const disconnect = () => {\n    setShowLoginControls(false);\n    deactivate();\n  }\n\n  return (\n    <HeaderContainer\n      direction=\"row\"\n      padding=\"10px 15px\"\n    >\n      <ItemH\n        justify=\"flex-start\"\n        flex=\"0\"\n      >\n        {active && !error &&\n          <Profile />\n        }\n        {!active &&\n          <Logo src=\"epns.png\" />\n        }\n      </ItemH>\n\n      <ItemH\n        justify=\"flex-end\"\n      >\n        {active && !error &&\n          <Bell\n            badgeCount={badgeCount}\n            bellPressedCB={bellPressed}\n            width={32}\n            height={32}\n          />\n        }\n\n        {showLoginControls &&\n          <Item\n            position=\"absolute\"\n          >\n            <Button\n              bg=\"#000\"\n              size=\"12px\"\n              spacing=\"0.2em\"\n              textTransform=\"uppercase\"\n              weight=\"600\"\n              radius=\"20px\"\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </Button>\n          </Item>\n        }\n\n        <ItemH\n          justify=\"flex-end\"\n          flex=\"initial\"\n        >\n          {!!error &&\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n          }\n          {!active && !error &&\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n          }\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n        </ItemH>\n      </ItemH>\n    </HeaderContainer>\n  );\n}\n\n// CSS Styles\nconst HeaderContainer = styled(Section)`\n  @media (max-width: 1440px) {\n    background: rgb(255,255,255);\n  }\n`\n\nconst Logo = styled.img`\n  height: 40px;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, H2, H3, B, A} from 'components/SharedStyling';\n\nimport Loader from 'react-loader-spinner'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks'\nimport {\n  injected,\n  walletconnect,\n  portis,\n  trezor,\n  ledger\n} from 'connectors'\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n\nimport Home from 'pages/Home';\nimport Header from 'segments/Header';\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst web3Connectors = {\n  Injected: {obj: injected, logo: './svg/login/metamask.svg', title: 'MetaMask'},\n  WalletConnect: {obj: walletconnect, logo: './svg/login/walletconnect.svg', title: 'Wallet Connect'},\n  Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\n  Ledger: {obj: ledger, logo: './svg/login/ledger.svg', title: 'Ledger'},\n  Portis: {obj: portis, logo: './svg/login/portis.svg', title: 'Portis'},\n}\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nfunction getLibrary(provider, connector) {\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nexport default function() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        ⛓\n      </span>\n      <span>{Number.isInteger(chainId) ? chainId : ''}</span>\n    </>\n  )\n}\n\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\n  const [ bellPressed, setBellPressed ] = React.useState(0);\n\n  // Initialize GA\n  ReactGA.initialize('UA-165415629-4');\n  ReactGA.pageview('/login');\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n      <>\n        <HeaderContainer>\n          <Header\n            badgeCount={badgeCount}\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\n          />\n        </HeaderContainer>\n\n        <ParentContainer>\n        {(active) && !error && (\n          <HomeContainer>\n            <Home\n              setBadgeCount={setBadgeCount}\n              bellPressed={bellPressed}\n            />\n          </HomeContainer>\n\n        )}\n\n        {!active &&\n          <Item>\n            <ProviderLogo src=\"./epnshomelogo.png\" srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"} />\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"15px\"\n              radius=\"12px\"\n            >\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Connect</Span><Span weight=\"200\"> Your Wallet</Span>\n              </H2>\n\n              <ItemH\n                maxWidth=\"800px\"\n                align=\"stretch\"\n              >\n                {Object.keys(web3Connectors).map(name => {\n                  const currentConnector = web3Connectors[name].obj\n                  const activating = currentConnector === activatingConnector\n                  const connected = currentConnector === connector\n                  const disabled = !triedEager || !!activatingConnector || connected || !!error\n                  const image = web3Connectors[name].logo\n                  const title = web3Connectors[name].title\n\n                  return (\n                    <ProviderButton\n                      disabled={disabled}\n                      key={name}\n                      onClick={() => {\n                        setActivatingConnector(currentConnector)\n                        activate(currentConnector)\n                      }}\n                      border=\"#35c5f3\"\n                    >\n                      <ProviderImage src={image} />\n\n                      <Span\n                        spacing=\"0.1em\"\n                        textTransform=\"uppercase\"\n                        size=\"12px\"\n                        weight=\"600\"\n                        padding=\"10px\"\n                      >\n                        {title}\n                      </Span>\n                    </ProviderButton>\n                  )\n                })}\n              </ItemH>\n            </Item>\n\n            <Span margin=\"10px\" size=\"14px\">\n              By unlocking your wallet, <B>You agree</B> to our <A href=\"https://epns.io/tos\" target=\"_blank\">Terms of Service</A> and our <A href=\"https://epns.io/privacy\" target=\"_blank\">Privacy Policy</A>.\n            </Span>\n          </Item>\n        }\n        </ParentContainer>\n\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n        />\n      </>\n  );\n}\n\n\n// CSS STYLES\nconst HeaderContainer = styled.header`\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 50px 20px;\n  flex: 1;\n`\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 10px 20px 20px 20px;\n  min-width: 200px;\n`\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 280px;\n  background: #fff;\n  outline: 0;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n`\n\nconst ProviderImage = styled.img`\n  width: 32px;\n  max-height: 32px;\n  padding: 10px;\n`\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {}\n  .Toastify__toast {}\n  .Toastify__toast--error {}\n  .Toastify__toast--warning {}\n  .Toastify__toast--success {}\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\n\nimport './index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\"),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers, utils, BigNumber} from \"ethers\";\nimport { parseEther, bigNumber } from 'ethers/utils'\nconst claims = require(\"config/claims.json\")\n\n// Airdrop Helper Functions\nconst AirdropHelper = {\n    combinedHash : (first, second) => {\n        if (!first) {\n          return second\n        }\n        if (!second) {\n          return first\n        }\n      \n        return Buffer.from(\n          utils.solidityKeccak256(['bytes32', 'bytes32'], [first, second].sort(Buffer.compare)).slice(2),\n          'hex'\n        )\n    },\n      \n    toNode : (index, account, amount) => {\n    const pairHex = utils.solidityKeccak256(['uint256', 'address', 'uint256'], [index, account, amount])\n    return Buffer.from(pairHex.slice(2), 'hex')\n    },\n      \n    verifyProof : (\n    index,\n    account,\n    amount,\n    proof,\n    root\n    ) => {\n    let pair = AirdropHelper.toNode(index, account, amount)\n    for (const item of proof) {\n        pair = AirdropHelper.combinedHash(pair, item)\n    }\n    \n    return pair.equals(root)\n    },\n      \n    getNextLayer : (elements) => {\n    return elements.reduce((layer, el, idx, arr) => {\n        if (idx % 2 === 0) {\n        // Hash the current element with its pair element\n        layer.push(AirdropHelper.combinedHash(el, arr[idx + 1]))\n        }\n    \n        return layer\n    }, [])\n    },\n      \n    getRoot : (balances) => {\n    let nodes = balances\n        .map(({ account, amount, index }) => AirdropHelper.toNode(index, account, amount))\n        // sort by lexicographical order\n        .sort(Buffer.compare)\n    \n    // deduplicate any eleents\n    nodes = nodes.filter((el, idx) => {\n        return idx === 0 || !nodes[idx - 1].equals(el)\n    })\n    \n    const layers = []\n    layers.push(nodes)\n    \n    // Get next layer until we reach the root\n    while (layers[layers.length - 1].length > 1) {\n        layers.push(AirdropHelper.getNextLayer(layers[layers.length - 1]))\n    }\n    \n    return layers[layers.length - 1][0]\n    },\n\n\n    verifyAddress: async (user, contract) => {\n        const enableLogs = 1;\n        const merkleRootHex = claims.merkleRoot\n        const merkleRoot = Buffer.from(merkleRootHex.slice(2), 'hex')\n        if(claims.claims[user]){\n            const claim = claims.claims[user]\n        const proof = claim.proof.map((p) => Buffer.from(p.slice(2), 'hex'))\n        const verified = (AirdropHelper.verifyProof(claim.index, user, claim.amount, proof, merkleRoot))\n        let txPromise = await contract.isClaimed(claim.index)\n        const isClaimed = await txPromise\n        const claimable = !isClaimed\n        const BNamount = BigNumber.from(claim.amount)\n        const amount = BNamount.toNumber()\n        // const amount = ethers.utils.parseEther(num)\n        return({ index: claim.index, account: user, amount, proof, merkleRoot, verified, claimable})\n        }\n        else\n        return({verified: false})\n    },\n\n  \n\n}\n\nexport default AirdropHelper;\n","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n"],"sourceRoot":""}